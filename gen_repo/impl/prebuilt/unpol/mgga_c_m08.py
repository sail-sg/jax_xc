t3 = 6 ** (0.1e1 / 0.3e1)
t4 = t3 ** 2
t5 = math.pi ** 2
t6 = t5 ** (0.1e1 / 0.3e1)
t7 = t6 ** 2
t9 = 0.3e1 / 0.10e2 * t4 * t7
t10 = 2 ** (0.1e1 / 0.3e1)
t11 = t10 ** 2
t13 = r0 ** (0.1e1 / 0.3e1)
t14 = t13 ** 2
t17 = tau0 * t11 / t14 / r0
t18 = t9 - t17
t20 = t9 + t17
t21 = 0.1e1 / t20
t24 = t18 ** 2
t26 = t20 ** 2
t27 = 0.1e1 / t26
t30 = t24 * t18
t32 = t26 * t20
t33 = 0.1e1 / t32
t36 = t24 ** 2
t38 = t26 ** 2
t39 = 0.1e1 / t38
t42 = t36 * t18
t45 = 0.1e1 / t38 / t20
t48 = t36 * t24
t51 = 0.1e1 / t38 / t26
t54 = t36 * t30
t57 = 0.1e1 / t38 / t32
t60 = t36 ** 2
t62 = t38 ** 2
t63 = 0.1e1 / t62
t66 = t60 * t18
t69 = 0.1e1 / t62 / t20
t72 = t60 * t24
t75 = 0.1e1 / t62 / t26
t78 = t60 * t30
t81 = 0.1e1 / t62 / t32
t83 = params_a_m08_a[0] + params_a_m08_a[1] * t18 * t21 + params_a_m08_a[2] * t24 * t27 + params_a_m08_a[3] * t30 * t33 + params_a_m08_a[4] * t36 * t39 + params_a_m08_a[5] * t42 * t45 + params_a_m08_a[6] * t48 * t51 + params_a_m08_a[7] * t54 * t57 + params_a_m08_a[8] * t60 * t63 + params_a_m08_a[9] * t66 * t69 + params_a_m08_a[10] * t72 * t75 + params_a_m08_a[11] * t78 * t81
t84 = 3 ** (0.1e1 / 0.3e1)
t86 = (0.1e1 / math.pi) ** (0.1e1 / 0.3e1)
t88 = 4 ** (0.1e1 / 0.3e1)
t89 = t88 ** 2
t92 = t84 * t86 * t89 / t13
t95 = math.sqrt(t92)
t98 = t92 ** 0.15e1
t100 = t84 ** 2
t101 = t86 ** 2
t105 = t100 * t101 * t88 / t14
t111 = math.log(0.1e1 + 0.16081979498692535067e2 / (0.37978500000000000000e1 * t95 + 0.89690000000000000000e0 * t92 + 0.20477500000000000000e0 * t98 + 0.12323500000000000000e0 * t105))
t114 = 0.1e1 <= p_a_zeta_threshold
t115 = p_a_zeta_threshold ** (0.1e1 / 0.3e1)
t117 = lax_cond(t114, t115 * p_a_zeta_threshold, 1)
t134 = math.log(0.1e1 + 0.29608749977793437516e2 / (0.51785000000000000000e1 * t95 + 0.90577500000000000000e0 * t92 + 0.11003250000000000000e0 * t98 + 0.12417750000000000000e0 * t105))
t138 = -0.621814e-1 * (0.1e1 + 0.53425000000000000000e-1 * t92) * t111 + 0.19751673498613801407e-1 * (0.2e1 * t117 - 0.2e1) / (0.2e1 * t10 - 0.2e1) * (0.1e1 + 0.27812500000000000000e-1 * t92) * t134
t174 = params_a_m08_b[0] + params_a_m08_b[1] * t18 * t21 + params_a_m08_b[2] * t24 * t27 + params_a_m08_b[3] * t30 * t33 + params_a_m08_b[4] * t36 * t39 + params_a_m08_b[5] * t42 * t45 + params_a_m08_b[6] * t48 * t51 + params_a_m08_b[7] * t54 * t57 + params_a_m08_b[8] * t60 * t63 + params_a_m08_b[9] * t66 * t69 + params_a_m08_b[10] * t72 * t75 + params_a_m08_b[11] * t78 * t81
t175 = math.log(0.2e1)
t176 = 0.1e1 - t175
t179 = t115 ** 2
t180 = lax_cond(t114, t179, 1)
t181 = t180 ** 2
t182 = t181 * t180
t184 = r0 ** 2
t196 = 0.1e1 / t176
t197 = t196 * t5
t202 = math.exp(-t138 * t196 * t5 / t182)
t204 = 0.1e1 / (t202 - 0.1e1)
t205 = s0 ** 2
t207 = t184 ** 2
t212 = t181 ** 2
t221 = s0 / t13 / t184 * t10 / t181 * t100 / t86 * t88 / 0.96e2 + 0.21720231316129303386e-4 * t197 * t204 * t205 / t14 / t207 * t11 / t212 * t84 / t101 * t89
t232 = math.log(0.1e1 + 0.6672455060314922e-1 * t221 * t196 * t5 / (0.1e1 + 0.6672455060314922e-1 * t197 * t204 * t221))
res = t83 * t138 + t174 * t176 / t5 * t182 * t232
