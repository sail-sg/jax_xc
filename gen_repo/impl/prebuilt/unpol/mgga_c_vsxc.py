t3 = 0.1e1 <= p_a_zeta_threshold
t4 = jnp.logical_or(r0 / 0.2e1 <= p_a_dens_threshold, t3)
t5 = lax_cond(t3, p_a_zeta_threshold, 1)
t6 = 3 ** (0.1e1 / 0.3e1)
t8 = (0.1e1 / math.pi) ** (0.1e1 / 0.3e1)
t9 = t6 * t8
t10 = 4 ** (0.1e1 / 0.3e1)
t11 = t10 ** 2
t13 = r0 ** (0.1e1 / 0.3e1)
t14 = 0.1e1 / t13
t15 = 2 ** (0.1e1 / 0.3e1)
t17 = p_a_zeta_threshold ** (0.1e1 / 0.3e1)
t19 = lax_cond(t3, 0.1e1 / t17, 1)
t21 = t9 * t11 * t14 * t15 * t19
t24 = math.sqrt(t21)
t27 = t21 ** 0.15e1
t29 = t6 ** 2
t30 = t8 ** 2
t31 = t29 * t30
t33 = t13 ** 2
t34 = 0.1e1 / t33
t35 = t15 ** 2
t37 = t19 ** 2
t39 = t31 * t10 * t34 * t35 * t37
t45 = math.log(0.1e1 + 0.16081979498692535067e2 / (0.37978500000000000000e1 * t24 + 0.89690000000000000000e0 * t21 + 0.20477500000000000000e0 * t27 + 0.12323500000000000000e0 * t39))
t47 = 0.621814e-1 * (0.1e1 + 0.53425000000000000000e-1 * t21) * t45
t49 = t17 * p_a_zeta_threshold
t51 = lax_cond(0.2e1 <= p_a_zeta_threshold, t49, 0.2e1 * t15)
t53 = lax_cond(0.0e0 <= p_a_zeta_threshold, t49, 0)
t57 = 0.1e1 / (0.2e1 * t15 - 0.2e1)
t58 = (t51 + t53 - 0.2e1) * t57
t69 = math.log(0.1e1 + 0.32163958997385070134e2 / (0.70594500000000000000e1 * t24 + 0.15494250000000000000e1 * t21 + 0.42077500000000000000e0 * t27 + 0.15629250000000000000e0 * t39))
t82 = math.log(0.1e1 + 0.29608749977793437516e2 / (0.51785000000000000000e1 * t24 + 0.90577500000000000000e0 * t21 + 0.11003250000000000000e0 * t27 + 0.12417750000000000000e0 * t39))
t83 = (0.1e1 + 0.27812500000000000000e-1 * t21) * t82
t92 = lax_cond(t4, 0, t5 * (-t47 + t58 * (-0.3109070e-1 * (0.1e1 + 0.51370000000000000000e-1 * t21) * t69 + t47 - 0.19751673498613801407e-1 * t83) + 0.19751673498613801407e-1 * t58 * t83) / 0.2e1)
t95 = r0 ** 2
t97 = 0.1e1 / t33 / t95
t98 = s0 * t35 * t97
t102 = tau0 * t35 / t33 / r0
t103 = 0.2e1 * t102
t104 = 6 ** (0.1e1 / 0.3e1)
t105 = t104 ** 2
t106 = math.pi ** 2
t107 = t106 ** (0.1e1 / 0.3e1)
t108 = t107 ** 2
t109 = t105 * t108
t110 = 0.3e1 / 0.5e1 * t109
t113 = 0.1e1 + params_a_alpha_ss * (t98 + t103 - t110)
t118 = t35 * t97
t121 = t103 - t110
t124 = t113 ** 2
t128 = s0 ** 2
t130 = t95 ** 2
t134 = t15 / t13 / t130 / r0
t142 = t121 ** 2
t159 = t9 * t11 * t14
t162 = math.sqrt(t159)
t165 = t159 ** 0.15e1
t168 = t31 * t10 * t34
t174 = math.log(0.1e1 + 0.16081979498692535067e2 / (0.37978500000000000000e1 * t162 + 0.89690000000000000000e0 * t159 + 0.20477500000000000000e0 * t165 + 0.12323500000000000000e0 * t168))
t177 = lax_cond(t3, t49, 1)
t191 = math.log(0.1e1 + 0.29608749977793437516e2 / (0.51785000000000000000e1 * t162 + 0.90577500000000000000e0 * t159 + 0.11003250000000000000e0 * t165 + 0.12417750000000000000e0 * t168))
t199 = 0.4e1 * t102
t200 = 0.6e1 / 0.5e1 * t109
t203 = 0.1e1 + params_a_alpha_ab * (0.2e1 * t98 + t199 - t200)
t211 = t199 - t200
t214 = t203 ** 2
t227 = t211 ** 2
res = 0.2e1 * t92 * (params_a_dss[0] / t113 + (params_a_dss[1] * s0 * t118 + params_a_dss[2] * t121) / t124 + (params_a_dss[4] * s0 * t118 * t121 + 0.2e1 * params_a_dss[3] * t128 * t134 + params_a_dss[5] * t142) / t124 / t113) * (0.1e1 - s0 / r0 / tau0 / 0.8e1) + (-0.621814e-1 * (0.1e1 + 0.53425000000000000000e-1 * t159) * t174 + 0.19751673498613801407e-1 * (0.2e1 * t177 - 0.2e1) * t57 * (0.1e1 + 0.27812500000000000000e-1 * t159) * t191 - 0.2e1 * t92) * (params_a_dab[0] / t203 + (0.2e1 * params_a_dab[1] * s0 * t118 + params_a_dab[2] * t211) / t214 + (0.2e1 * params_a_dab[4] * s0 * t118 * t211 + 0.8e1 * params_a_dab[3] * t128 * t134 + params_a_dab[5] * t227) / t214 / t203)
