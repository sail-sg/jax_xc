t1 = r0 - r1
t2 = r0 + r1
t4 = t1 / t2
t6 = lax_cond(0.0e0 < t4, t4, -t4)
t8 = params_a_C0_c[0]
t9 = params_a_C0_c[1]
t10 = params_a_C0_c[2]
t11 = params_a_C0_c[3]
t13 = t1 ** 2
t15 = t2 ** 2
t18 = t13 ** 2
t20 = t15 ** 2
t21 = 0.1e1 / t20
t29 = 0.1e1 + t4
t30 = t29 <= p_a_zeta_threshold
t31 = p_a_zeta_threshold - 0.1e1
t32 = 0.1e1 - t4
t33 = t32 <= p_a_zeta_threshold
t35 = lax_cond(t33, -t31, t4)
t36 = lax_cond(t30, t31, t35)
t37 = t36 ** 2
t39 = r0 ** 2
t40 = r0 ** (0.1e1 / 0.3e1)
t41 = t40 ** 2
t44 = s0 / t41 / t39
t45 = 0.1e1 + t36
t46 = t45 / 0.2e1
t47 = t46 ** (0.1e1 / 0.3e1)
t48 = t47 ** 2
t51 = r1 ** 2
t52 = r1 ** (0.1e1 / 0.3e1)
t53 = t52 ** 2
t56 = s2 / t53 / t51
t57 = 0.1e1 - t36
t58 = t57 / 0.2e1
t59 = t58 ** (0.1e1 / 0.3e1)
t60 = t59 ** 2
t64 = s0 + 0.2e1 * s1 + s2
t65 = t2 ** (0.1e1 / 0.3e1)
t66 = t65 ** 2
t69 = t64 / t66 / t15
t72 = 3 ** (0.1e1 / 0.3e1)
t73 = math.pi ** 2
t74 = t73 ** (0.1e1 / 0.3e1)
t75 = t74 ** 2
t78 = t45 ** (0.1e1 / 0.3e1)
t79 = t78 * t45
t81 = t57 ** (0.1e1 / 0.3e1)
t82 = t81 * t57
t89 = (0.1e1 + (0.1e1 - t37) * (t44 * t48 * t46 + t56 * t60 * t58 - t69) * t72 / t75 * (0.1e1 / t79 + 0.1e1 / t82) / 0.24e2) ** 2
t90 = t89 ** 2
t93 = lax_cond(-t6 <= -0.999999999999e0, t8 + t9 + t10 + t11, (t8 + t9 * t13 / t15 + t10 * t18 * t21 + t11 * t18 * t13 / t20 / t15) / t90)
t98 = t29 / 0.2e1
t99 = t98 ** (0.1e1 / 0.3e1)
t100 = t99 ** 2
t106 = t32 / 0.2e1
t107 = t106 ** (0.1e1 / 0.3e1)
t108 = t107 ** 2
t114 = t69 / (tau0 / t41 / r0 * t100 * t98 + tau1 / t53 / r1 * t108 * t106) / 0.8e1
t116 = lax_cond(0.1e1 < t114, 1, t114)
t117 = t116 ** 2
t120 = jnp.logical_or(r0 <= p_a_dens_threshold, t30)
t122 = (0.1e1 / math.pi) ** (0.1e1 / 0.3e1)
t123 = t72 * t122
t124 = 4 ** (0.1e1 / 0.3e1)
t125 = t124 ** 2
t126 = 0.1e1 / t65
t128 = t123 * t125 * t126
t131 = math.sqrt(t128)
t134 = t128 ** 0.15e1
t136 = t72 ** 2
t137 = t122 ** 2
t138 = t136 * t137
t139 = 0.1e1 / t66
t141 = t138 * t124 * t139
t147 = math.log(0.1e1 + 0.16081979498692535067e2 / (0.37978500000000000000e1 * t131 + 0.89690000000000000000e0 * t128 + 0.20477500000000000000e0 * t134 + 0.12323500000000000000e0 * t141))
t149 = 0.621814e-1 * (0.1e1 + 0.53425000000000000000e-1 * t128) * t147
t150 = t37 ** 2
t151 = t45 <= p_a_zeta_threshold
t152 = p_a_zeta_threshold ** (0.1e1 / 0.3e1)
t153 = t152 * p_a_zeta_threshold
t154 = lax_cond(t151, t153, t79)
t155 = t57 <= p_a_zeta_threshold
t156 = lax_cond(t155, t153, t82)
t157 = t154 + t156 - 0.2e1
t159 = 2 ** (0.1e1 / 0.3e1)
t162 = 0.1e1 / (0.2e1 * t159 - 0.2e1)
t173 = math.log(0.1e1 + 0.32163958997385070134e2 / (0.70594500000000000000e1 * t131 + 0.15494250000000000000e1 * t128 + 0.42077500000000000000e0 * t134 + 0.15629250000000000000e0 * t141))
t186 = math.log(0.1e1 + 0.29608749977793437516e2 / (0.51785000000000000000e1 * t131 + 0.90577500000000000000e0 * t128 + 0.11003250000000000000e0 * t134 + 0.12417750000000000000e0 * t141))
t187 = (0.1e1 + 0.27812500000000000000e-1 * t128) * t186
t189 = -0.3109070e-1 * (0.1e1 + 0.51370000000000000000e-1 * t128) * t173 + t149 - 0.19751673498613801407e-1 * t187
t191 = t150 * t157 * t162 * t189
t194 = 0.19751673498613801407e-1 * t157 * t162 * t187
t195 = math.log(0.2e1)
t196 = 0.1e1 - t195
t198 = t196 / t73
t199 = t152 ** 2
t200 = t78 ** 2
t201 = lax_cond(t151, t199, t200)
t202 = t81 ** 2
t203 = lax_cond(t155, t199, t202)
t205 = t201 / 0.2e1 + t203 / 0.2e1
t206 = t205 ** 2
t207 = t206 * t205
t211 = t64 / t65 / t15 * t159
t215 = 0.1e1 / t122 * t124
t219 = 0.1e1 / t196
t220 = params_a_beta * t219
t226 = math.exp(-(-t149 + t191 + t194) * t219 * t73 / t207)
t229 = t73 / (t226 - 0.1e1)
t230 = t64 ** 2
t235 = t159 ** 2
t236 = 0.1e1 / t66 / t20 * t235
t237 = t206 ** 2
t240 = 0.1e1 / t137
t242 = t72 * t240 * t125
t246 = t211 / t206 * t136 * t215 / 0.96e2 + t220 * t229 * t230 * t236 / t237 * t242 / 0.3072e4
t248 = t219 * t73
t256 = math.log(0.1e1 + params_a_beta * t246 * t248 / (t220 * t229 * t246 + 0.1e1))
t259 = t198 * t207 * t256 - t149 + t191 + t194
t262 = t123 * t125
t263 = t126 * t159
t265 = (0.1e1 / t45) ** (0.1e1 / 0.3e1)
t267 = t262 * t263 * t265
t270 = math.sqrt(t267)
t273 = t267 ** 0.15e1
t275 = t138 * t124
t276 = t139 * t235
t277 = t265 ** 2
t279 = t275 * t276 * t277
t285 = math.log(0.1e1 + 0.16081979498692535067e2 / (0.37978500000000000000e1 * t270 + 0.89690000000000000000e0 * t267 + 0.20477500000000000000e0 * t273 + 0.12323500000000000000e0 * t279))
t287 = 0.621814e-1 * (0.1e1 + 0.53425000000000000000e-1 * t267) * t285
t288 = 0.2e1 <= p_a_zeta_threshold
t290 = lax_cond(t288, t153, 0.2e1 * t159)
t291 = 0.0e0 <= p_a_zeta_threshold
t292 = lax_cond(t291, t153, 0)
t294 = (t290 + t292 - 0.2e1) * t162
t305 = math.log(0.1e1 + 0.32163958997385070134e2 / (0.70594500000000000000e1 * t270 + 0.15494250000000000000e1 * t267 + 0.42077500000000000000e0 * t273 + 0.15629250000000000000e0 * t279))
t318 = math.log(0.1e1 + 0.29608749977793437516e2 / (0.51785000000000000000e1 * t270 + 0.90577500000000000000e0 * t267 + 0.11003250000000000000e0 * t273 + 0.12417750000000000000e0 * t279))
t319 = (0.1e1 + 0.27812500000000000000e-1 * t267) * t318
t322 = t294 * (-0.3109070e-1 * (0.1e1 + 0.51370000000000000000e-1 * t267) * t305 + t287 - 0.19751673498613801407e-1 * t319)
t324 = 0.19751673498613801407e-1 * t294 * t319
t325 = lax_cond(t288, t199, t235)
t326 = lax_cond(t291, t199, 0)
t328 = t325 / 0.2e1 + t326 / 0.2e1
t329 = t328 ** 2
t330 = t329 * t328
t332 = 0.1e1 / t329 * t136
t339 = t220 * t73
t343 = t73 / t330
t345 = math.exp(-(-t287 + t322 + t324) * t219 * t343)
t347 = 0.1e1 / (t345 - 0.1e1)
t348 = s0 ** 2
t350 = t39 ** 2
t356 = t329 ** 2
t359 = 0.1e1 / t356 * t72 * t240
t360 = t125 * t66
t366 = t44 * t332 * t215 * t65 / t265 / 0.96e2 + t339 * t347 * t348 / t40 / t350 / r0 * t359 * t360 / t277 / 0.3072e4
t376 = math.log(0.1e1 + params_a_beta * t366 * t248 / (t220 * t73 * t347 * t366 + 0.1e1))
t379 = t198 * t330 * t376 - t287 + t322 + t324
t381 = lax_cond(t259 < t379, t379, t259)
t384 = lax_cond(t120, t259 * t29 / 0.2e1, t381 * t45 / 0.2e1)
t386 = jnp.logical_or(r1 <= p_a_dens_threshold, t33)
t390 = (0.1e1 / t57) ** (0.1e1 / 0.3e1)
t392 = t262 * t263 * t390
t395 = math.sqrt(t392)
t398 = t392 ** 0.15e1
t400 = t390 ** 2
t402 = t275 * t276 * t400
t408 = math.log(0.1e1 + 0.16081979498692535067e2 / (0.37978500000000000000e1 * t395 + 0.89690000000000000000e0 * t392 + 0.20477500000000000000e0 * t398 + 0.12323500000000000000e0 * t402))
t410 = 0.621814e-1 * (0.1e1 + 0.53425000000000000000e-1 * t392) * t408
t421 = math.log(0.1e1 + 0.32163958997385070134e2 / (0.70594500000000000000e1 * t395 + 0.15494250000000000000e1 * t392 + 0.42077500000000000000e0 * t398 + 0.15629250000000000000e0 * t402))
t434 = math.log(0.1e1 + 0.29608749977793437516e2 / (0.51785000000000000000e1 * t395 + 0.90577500000000000000e0 * t392 + 0.11003250000000000000e0 * t398 + 0.12417750000000000000e0 * t402))
t435 = (0.1e1 + 0.27812500000000000000e-1 * t392) * t434
t438 = t294 * (-0.3109070e-1 * (0.1e1 + 0.51370000000000000000e-1 * t392) * t421 + t410 - 0.19751673498613801407e-1 * t435)
t440 = 0.19751673498613801407e-1 * t294 * t435
t450 = math.exp(-(-t410 + t438 + t440) * t219 * t343)
t452 = 0.1e1 / (t450 - 0.1e1)
t453 = s2 ** 2
t455 = t51 ** 2
t466 = t56 * t332 * t215 * t65 / t390 / 0.96e2 + t339 * t452 * t453 / t52 / t455 / r1 * t359 * t360 / t400 / 0.3072e4
t476 = math.log(0.1e1 + params_a_beta * t466 * t248 / (t220 * t73 * t452 * t466 + 0.1e1))
t479 = t198 * t330 * t476 - t410 + t438 + t440
t481 = lax_cond(t259 < t479, t479, t259)
t484 = lax_cond(t386, t259 * t32 / 0.2e1, t481 * t57 / 0.2e1)
t490 = t29 ** (0.1e1 / 0.3e1)
t492 = lax_cond(t30, t153, t490 * t29)
t493 = t32 ** (0.1e1 / 0.3e1)
t495 = lax_cond(t33, t153, t493 * t32)
t497 = (t492 + t495 - 0.2e1) * t162
t499 = t18 * t21 * t497 * t189
t501 = 0.19751673498613801407e-1 * t497 * t187
t502 = t490 ** 2
t503 = lax_cond(t30, t199, t502)
t504 = t493 ** 2
t505 = lax_cond(t33, t199, t504)
t507 = t503 / 0.2e1 + t505 / 0.2e1
t508 = t507 ** 2
t509 = t508 * t507
t520 = math.exp(-(-t149 + t499 + t501) * t219 * t73 / t509)
t523 = t73 / (t520 - 0.1e1)
t526 = t508 ** 2
t532 = t211 / t508 * t136 * t215 / 0.96e2 + t220 * t523 * t230 * t236 / t526 * t242 / 0.3072e4
t541 = math.log(0.1e1 + params_a_beta * t532 * t248 / (t220 * t523 * t532 + 0.1e1))
t546 = -(0.1e1 + t93) * t117 * (t384 + t484) + (t93 * t117 + 0.1e1) * (t198 * t509 * t541 - t149 + t499 + t501)
res = t546 * (params_a_d * t546 * t117 * t116 + 0.1e1)
