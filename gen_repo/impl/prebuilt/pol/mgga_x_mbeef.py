t2 = 3 ** (0.1e1 / 0.3e1)
t3 = math.pi ** (0.1e1 / 0.3e1)
t5 = t2 / t3
t6 = r0 + r1
t7 = 0.1e1 / t6
t10 = 0.2e1 * r0 * t7 <= p_a_zeta_threshold
t11 = p_a_zeta_threshold - 0.1e1
t14 = 0.2e1 * r1 * t7 <= p_a_zeta_threshold
t15 = -t11
t17 = (r0 - r1) * t7
t18 = lax_cond(t14, t15, t17)
t19 = lax_cond(t10, t11, t18)
t20 = t19 + 0.1e1
t22 = p_a_zeta_threshold ** (0.1e1 / 0.3e1)
t23 = t22 * p_a_zeta_threshold
t24 = t20 ** (0.1e1 / 0.3e1)
t26 = lax_cond(t20 <= p_a_zeta_threshold, t23, t24 * t20)
t27 = t6 ** (0.1e1 / 0.3e1)
t29 = 6 ** (0.1e1 / 0.3e1)
t30 = math.pi ** 2
t31 = t30 ** (0.1e1 / 0.3e1)
t32 = t31 ** 2
t33 = 0.1e1 / t32
t34 = t29 * t33
t35 = r0 ** 2
t36 = r0 ** (0.1e1 / 0.3e1)
t37 = t36 ** 2
t40 = s0 / t37 / t35
t46 = t34 * t40 / (0.65124e1 + t34 * t40 / 0.24e2)
t48 = t46 / 0.12e2 - 0.1e1
t56 = 0.5e1 / 0.9e1 * (tau0 / t37 / r0 - t40 / 0.8e1) * t29 * t33
t58 = 0.1e5 < t56
t59 = lax_cond(t58, t56, 0.1e5)
t60 = t59 ** 2
t65 = t60 ** 2
t69 = lax_cond(t58, 0.1e5, t56)
t70 = t69 ** 2
t71 = 0.1e1 - t70
t72 = t71 ** 2
t74 = t70 * t69
t80 = lax_cond(0.1e5 <= t56, 0.1e1 - 0.3e1 / t60 - 0.1e1 / t60 / t59 + 0.3e1 / t65, -t72 * t71 / (0.1e1 + t74 * (0.1e1 + t74)))
t81 = t80 ** 2
t82 = t81 * t80
t83 = t81 ** 2
t84 = t83 * t82
t86 = t83 * t80
t90 = 0.429e3 / 0.16e2 * t84 - 0.693e3 / 0.16e2 * t86 + 0.315e3 / 0.16e2 * t82 - 0.35e2 / 0.16e2 * t80
t96 = 0.63e2 / 0.8e1 * t86 - 0.35e2 / 0.4e1 * t82 + 0.15e2 / 0.8e1 * t80
t99 = t83 * t81
t103 = -0.5e1 / 0.16e2 + 0.231e3 / 0.16e2 * t99 - 0.315e3 / 0.16e2 * t83 + 0.105e3 / 0.16e2 * t81
t108 = 0.3e1 / 0.8e1 + 0.35e2 / 0.8e1 * t83 - 0.15e2 / 0.4e1 * t81
t113 = 0.5e1 / 0.2e1 * t82 - 0.3e1 / 0.2e1 * t80
t119 = -0.1e1 / 0.2e1 + 0.3e1 / 0.2e1 * t81
t122 = t48 ** 2
t123 = t122 * t48
t126 = 0.5e1 / 0.2e1 * t123 - t46 / 0.8e1 + 0.3e1 / 0.2e1
t140 = -0.1e1 / 0.2e1 + 0.3e1 / 0.2e1 * t122
t147 = -0.940351563e-5 * t48 * t90 + 0.822139896e-3 * t48 * t96 - 0.514204676e-4 * t48 * t103 + 0.119130546e-2 * t48 * t108 - 0.303347141e-2 * t48 * t113 + 0.100339208e0 * t48 * t80 - 0.879090772e-2 * t48 * t119 + 0.896739466e-3 * t126 * t96 - 0.216860568e-7 * t126 * t103 + 0.339308972e-2 * t126 * t108 - 0.845508103e-2 * t126 * t113 + 0.280678872e-1 * t126 * t119 - 0.182177954e-1 * t126 * t80 - 0.223014657e-8 * t140 * t90 + 0.668980219e-8 * t140 * t103 - 0.351041030e-3 * t140 * t96
t156 = t122 ** 2
t159 = t156 * t122
t168 = t156 * t48
t171 = 0.182906057e-2 * t140 * t108 - 0.150103636e-1 * t140 * t119 + 0.293253041e-2 * t140 * t113 - 0.434643460e-1 * t140 * t80 - 0.13805618397812500000e0 * t156 - 0.92294814328125000000e-1 * t122 + 0.80024660533125000000e-1 * t159 + 0.19735677658125000000e-4 * t84 - 0.94588310356312500000e-3 * t86 + 0.46461028218468750000e-2 * t82 - 0.43736526393718750000e-2 * t80 + 0.30207156698031250000e-2 * t83 + 0.70318268775656250000e-2 * t81 - 0.80008813355625000000e-4 * t99 - 0.39506119958812500000e0 * t168 + 0.49794463840937500000e0 * t123
t173 = t156 * t123
t179 = 0.63e2 / 0.8e1 * t168 - 0.35e2 / 0.4e1 * t123 + 0.5e1 / 0.32e2 * t46 - 0.15e2 / 0.8e1
t186 = 0.3e1 / 0.8e1 + 0.35e2 / 0.8e1 * t156 - 0.15e2 / 0.4e1 * t122
t206 = -0.5e1 / 0.16e2 + 0.231e3 / 0.16e2 * t159 - 0.315e3 / 0.16e2 * t156 + 0.105e3 / 0.16e2 * t122
t215 = 0.10602581552062500000e0 * t173 - 0.13022208355989583333e-1 * t46 - 0.188495102e-1 * t179 * t119 - 0.884148272e-2 * t179 * t80 - 0.493824365e-8 * t186 * t90 + 0.912223751e-8 * t186 * t103 + 0.209603871e-7 * t186 * t96 - 0.790811707e-7 * t186 * t108 - 0.182911291e-1 * t186 * t119 + 0.631891628e-2 * t186 * t113 + 0.162638575e-1 * t186 * t80 + 0.674910119e-8 * t126 * t90 - 0.416393106e-7 * t206 * t108 + 0.169805915e-6 * t206 * t119 - 0.265114646e-7 * t206 * t113 - 0.957417512e-2 * t206 * t80
t230 = 0.429e3 / 0.16e2 * t173 - 0.693e3 / 0.16e2 * t168 + 0.315e3 / 0.16e2 * t123 - 0.35e2 / 0.192e3 * t46 + 0.35e2 / 0.16e2
t251 = 0.13805672252189968750e1 + 0.850272392e-8 * t179 * t90 - 0.376702959e-7 * t179 * t96 - 0.138472194e-7 * t179 * t103 + 0.162238741e-6 * t179 * t108 - 0.896771404e-2 * t179 * t113 - 0.338128188e-7 * t230 * t96 + 0.554588743e-7 * t230 * t108 + 0.505920757e-7 * t230 * t113 - 0.276524680e-6 * t230 * t119 + 0.940675747e-2 * t230 * t80 - 0.691592964e-8 * t206 * t90 + 0.694482484e-8 * t206 * t103 + 0.236391411e-7 * t206 * t96 - 0.774224962e-8 * t230 * t103 + 0.888525527e-8 * t230 * t90
t257 = lax_cond(r0 <= p_a_dens_threshold, 0, -0.3e1 / 0.8e1 * t5 * t26 * t27 * (t147 + t171 + t215 + t251))
t259 = lax_cond(t10, t15, -t17)
t260 = lax_cond(t14, t11, t259)
t261 = t260 + 0.1e1
t263 = t261 ** (0.1e1 / 0.3e1)
t265 = lax_cond(t261 <= p_a_zeta_threshold, t23, t263 * t261)
t267 = r1 ** 2
t268 = r1 ** (0.1e1 / 0.3e1)
t269 = t268 ** 2
t272 = s2 / t269 / t267
t278 = t34 * t272 / (0.65124e1 + t34 * t272 / 0.24e2)
t280 = t278 / 0.12e2 - 0.1e1
t281 = t280 ** 2
t282 = t281 ** 2
t292 = 0.5e1 / 0.9e1 * (tau1 / t269 / r1 - t272 / 0.8e1) * t29 * t33
t294 = 0.1e5 < t292
t295 = lax_cond(t294, t292, 0.1e5)
t296 = t295 ** 2
t301 = t296 ** 2
t305 = lax_cond(t294, 0.1e5, t292)
t306 = t305 ** 2
t307 = 0.1e1 - t306
t308 = t307 ** 2
t310 = t306 * t305
t316 = lax_cond(0.1e5 <= t292, 0.1e1 - 0.3e1 / t296 - 0.1e1 / t296 / t295 + 0.3e1 / t301, -t308 * t307 / (0.1e1 + t310 * (0.1e1 + t310)))
t317 = t316 ** 2
t318 = t317 ** 2
t319 = t318 * t317
t323 = t282 * t281
t326 = t318 * t316
t328 = t317 * t316
t330 = t318 * t328
t332 = t282 * t280
t334 = t281 * t280
t336 = t282 * t334
t340 = -0.1e1 / 0.2e1 + 0.3e1 / 0.2e1 * t281
t343 = 0.5e1 / 0.2e1 * t328 - 0.3e1 / 0.2e1 * t316
t348 = -0.13805618397812500000e0 * t282 - 0.92294814328125000000e-1 * t281 - 0.80008813355625000000e-4 * t319 + 0.30207156698031250000e-2 * t318 + 0.70318268775656250000e-2 * t317 + 0.80024660533125000000e-1 * t323 - 0.43736526393718750000e-2 * t316 - 0.94588310356312500000e-3 * t326 + 0.46461028218468750000e-2 * t328 + 0.19735677658125000000e-4 * t330 - 0.39506119958812500000e0 * t332 + 0.49794463840937500000e0 * t334 + 0.10602581552062500000e0 * t336 - 0.13022208355989583333e-1 * t278 + 0.293253041e-2 * t340 * t343 - 0.434643460e-1 * t340 * t316
t350 = -0.1e1 / 0.2e1 + 0.3e1 / 0.2e1 * t317
t357 = 0.429e3 / 0.16e2 * t330 - 0.693e3 / 0.16e2 * t326 + 0.315e3 / 0.16e2 * t328 - 0.35e2 / 0.16e2 * t316
t363 = 0.63e2 / 0.8e1 * t326 - 0.35e2 / 0.4e1 * t328 + 0.15e2 / 0.8e1 * t316
t369 = -0.5e1 / 0.16e2 + 0.231e3 / 0.16e2 * t319 - 0.315e3 / 0.16e2 * t318 + 0.105e3 / 0.16e2 * t317
t374 = 0.3e1 / 0.8e1 + 0.35e2 / 0.8e1 * t318 - 0.15e2 / 0.4e1 * t317
t385 = 0.3e1 / 0.8e1 + 0.35e2 / 0.8e1 * t282 - 0.15e2 / 0.4e1 * t281
t390 = 0.5e1 / 0.2e1 * t334 - t278 / 0.8e1 + 0.3e1 / 0.2e1
t405 = -0.150103636e-1 * t340 * t350 - 0.940351563e-5 * t280 * t357 + 0.822139896e-3 * t280 * t363 - 0.514204676e-4 * t280 * t369 + 0.119130546e-2 * t280 * t374 - 0.303347141e-2 * t280 * t343 - 0.879090772e-2 * t280 * t350 + 0.100339208e0 * t280 * t316 - 0.182911291e-1 * t385 * t350 + 0.674910119e-8 * t390 * t357 - 0.216860568e-7 * t390 * t369 + 0.339308972e-2 * t390 * t374 + 0.896739466e-3 * t390 * t363 - 0.845508103e-2 * t390 * t343 + 0.280678872e-1 * t390 * t350 - 0.182177954e-1 * t390 * t316
t418 = 0.63e2 / 0.8e1 * t332 - 0.35e2 / 0.4e1 * t334 + 0.5e1 / 0.32e2 * t278 - 0.15e2 / 0.8e1
t442 = -0.5e1 / 0.16e2 + 0.231e3 / 0.16e2 * t323 - 0.315e3 / 0.16e2 * t282 + 0.105e3 / 0.16e2 * t281
t447 = 0.668980219e-8 * t340 * t369 - 0.223014657e-8 * t340 * t357 - 0.351041030e-3 * t340 * t363 + 0.182906057e-2 * t340 * t374 - 0.376702959e-7 * t418 * t363 - 0.896771404e-2 * t418 * t343 - 0.188495102e-1 * t418 * t350 - 0.884148272e-2 * t418 * t316 + 0.912223751e-8 * t385 * t369 - 0.493824365e-8 * t385 * t357 + 0.209603871e-7 * t385 * t363 - 0.790811707e-7 * t385 * t374 + 0.631891628e-2 * t385 * t343 + 0.162638575e-1 * t385 * t316 + 0.236391411e-7 * t442 * t363 - 0.416393106e-7 * t442 * t374
t464 = 0.429e3 / 0.16e2 * t336 - 0.693e3 / 0.16e2 * t332 + 0.315e3 / 0.16e2 * t334 - 0.35e2 / 0.192e3 * t278 + 0.35e2 / 0.16e2
t483 = 0.13805672252189968750e1 - 0.265114646e-7 * t442 * t343 - 0.957417512e-2 * t442 * t316 + 0.169805915e-6 * t442 * t350 + 0.850272392e-8 * t418 * t357 - 0.138472194e-7 * t418 * t369 + 0.162238741e-6 * t418 * t374 - 0.338128188e-7 * t464 * t363 - 0.774224962e-8 * t464 * t369 + 0.554588743e-7 * t464 * t374 + 0.505920757e-7 * t464 * t343 - 0.276524680e-6 * t464 * t350 + 0.940675747e-2 * t464 * t316 - 0.691592964e-8 * t442 * t357 + 0.694482484e-8 * t442 * t369 + 0.888525527e-8 * t464 * t357
t489 = lax_cond(r1 <= p_a_dens_threshold, 0, -0.3e1 / 0.8e1 * t5 * t265 * t27 * (t348 + t405 + t447 + t483))
res = t257 + t489
