t1 = r0 - r1
t2 = r0 + r1
t4 = t1 / t2
t5 = 0.1e1 + t4
t6 = t5 <= p_a_zeta_threshold
t7 = lax_cond(t6, p_a_zeta_threshold, t5)
t8 = r0 <= p_a_dens_threshold
t9 = 3 ** (0.1e1 / 0.3e1)
t10 = math.pi ** (0.1e1 / 0.3e1)
t12 = t9 / t10
t14 = p_a_zeta_threshold ** (0.1e1 / 0.3e1)
t15 = t14 * p_a_zeta_threshold
t16 = 2 ** (0.1e1 / 0.3e1)
t18 = lax_cond(0.2e1 <= p_a_zeta_threshold, t15, 0.2e1 * t16)
t19 = t2 ** (0.1e1 / 0.3e1)
t20 = t18 * t19
t23 = (t2 / r0) ** (0.1e1 / 0.3e1)
t24 = 0.1e1 / t23
t28 = lax_cond(t8, 0, -0.3e1 / 0.8e1 * t12 * t20 * t24)
t29 = 0.0e0 <= p_a_dens_threshold
t31 = lax_cond(0.0e0 <= p_a_zeta_threshold, t15, 0)
t32 = t31 * t19
t36 = lax_cond(t29, 0, -0.3e1 / 0.8e1 * t12 * t32 * t24)
t39 = params_a_c_x[0]
t40 = params_a_c_x[1]
t42 = r0 ** 2
t43 = r0 ** (0.1e1 / 0.3e1)
t44 = t43 ** 2
t46 = 0.1e1 / t44 / t42
t47 = s0 * t46
t49 = 0.1e1 + 0.4e-2 * t47
t50 = 0.1e1 / t49
t54 = params_a_c_x[2]
t55 = s0 ** 2
t57 = t42 ** 2
t60 = 0.1e1 / t43 / t57 / r0
t61 = t49 ** 2
t66 = params_a_c_x[3]
t67 = 6 ** (0.1e1 / 0.3e1)
t68 = t67 ** 2
t69 = math.pi ** 2
t70 = t69 ** (0.1e1 / 0.3e1)
t71 = t70 ** 2
t72 = t68 * t71
t73 = 0.3e1 / 0.10e2 * t72
t76 = tau0 / t44 / r0
t77 = t73 - t76
t79 = t73 + t76
t80 = 0.1e1 / t79
t82 = params_a_c_x[4]
t91 = 0.1e1 - t4
t92 = t91 <= p_a_zeta_threshold
t93 = lax_cond(t92, p_a_zeta_threshold, t91)
t94 = r1 <= p_a_dens_threshold
t97 = (t2 / r1) ** (0.1e1 / 0.3e1)
t98 = 0.1e1 / t97
t102 = lax_cond(t94, 0, -0.3e1 / 0.8e1 * t12 * t20 * t98)
t106 = lax_cond(t29, 0, -0.3e1 / 0.8e1 * t12 * t32 * t98)
t110 = r1 ** 2
t111 = r1 ** (0.1e1 / 0.3e1)
t112 = t111 ** 2
t114 = 0.1e1 / t112 / t110
t115 = s2 * t114
t117 = 0.1e1 + 0.4e-2 * t115
t118 = 0.1e1 / t117
t122 = s2 ** 2
t124 = t110 ** 2
t127 = 0.1e1 / t111 / t124 / r1
t128 = t117 ** 2
t135 = tau1 / t112 / r1
t136 = t73 - t135
t138 = t73 + t135
t139 = 0.1e1 / t138
t149 = jnp.logical_or(t8, t6)
t151 = (0.1e1 / math.pi) ** (0.1e1 / 0.3e1)
t152 = t9 * t151
t153 = 4 ** (0.1e1 / 0.3e1)
t154 = t153 ** 2
t155 = t152 * t154
t156 = 0.1e1 / t19
t157 = t156 * t16
t158 = 0.1e1 / t14
t159 = t5 ** (0.1e1 / 0.3e1)
t161 = lax_cond(t6, t158, 0.1e1 / t159)
t163 = t155 * t157 * t161
t166 = math.sqrt(t163)
t169 = t163 ** 0.15e1
t171 = t9 ** 2
t172 = t151 ** 2
t173 = t171 * t172
t174 = t173 * t153
t175 = t19 ** 2
t176 = 0.1e1 / t175
t177 = t16 ** 2
t178 = t176 * t177
t179 = t161 ** 2
t181 = t174 * t178 * t179
t187 = math.log(0.1e1 + 0.16081979498692535067e2 / (0.37978500000000000000e1 * t166 + 0.89690000000000000000e0 * t163 + 0.20477500000000000000e0 * t169 + 0.12323500000000000000e0 * t181))
t189 = 0.621814e-1 * (0.1e1 + 0.53425000000000000000e-1 * t163) * t187
t193 = 0.1e1 / (0.2e1 * t16 - 0.2e1)
t194 = (t18 + t31 - 0.2e1) * t193
t205 = math.log(0.1e1 + 0.32163958997385070134e2 / (0.70594500000000000000e1 * t166 + 0.15494250000000000000e1 * t163 + 0.42077500000000000000e0 * t169 + 0.15629250000000000000e0 * t181))
t218 = math.log(0.1e1 + 0.29608749977793437516e2 / (0.51785000000000000000e1 * t166 + 0.90577500000000000000e0 * t163 + 0.11003250000000000000e0 * t169 + 0.12417750000000000000e0 * t181))
t219 = (0.1e1 + 0.27812500000000000000e-1 * t163) * t218
t228 = lax_cond(t149, 0, t7 * (-t189 + t194 * (-0.3109070e-1 * (0.1e1 + 0.51370000000000000000e-1 * t163) * t205 + t189 - 0.19751673498613801407e-1 * t219) + 0.19751673498613801407e-1 * t194 * t219) / 0.2e1)
t229 = params_a_c_ss[0]
t230 = params_a_c_ss[1]
t234 = (0.1e1 + 0.2e0 * t47) ** 2
t235 = 0.1e1 / t234
t239 = params_a_c_ss[2]
t242 = params_a_c_ss[3]
t243 = t77 ** 2
t246 = t79 ** 2
t251 = t55 * t60 * t235
t254 = params_a_c_ss[4]
t255 = t243 ** 2
t257 = t246 ** 2
t264 = jnp.logical_or(t94, t92)
t265 = t91 ** (0.1e1 / 0.3e1)
t267 = lax_cond(t92, t158, 0.1e1 / t265)
t269 = t155 * t157 * t267
t272 = math.sqrt(t269)
t275 = t269 ** 0.15e1
t277 = t267 ** 2
t279 = t174 * t178 * t277
t285 = math.log(0.1e1 + 0.16081979498692535067e2 / (0.37978500000000000000e1 * t272 + 0.89690000000000000000e0 * t269 + 0.20477500000000000000e0 * t275 + 0.12323500000000000000e0 * t279))
t287 = 0.621814e-1 * (0.1e1 + 0.53425000000000000000e-1 * t269) * t285
t298 = math.log(0.1e1 + 0.32163958997385070134e2 / (0.70594500000000000000e1 * t272 + 0.15494250000000000000e1 * t269 + 0.42077500000000000000e0 * t275 + 0.15629250000000000000e0 * t279))
t311 = math.log(0.1e1 + 0.29608749977793437516e2 / (0.51785000000000000000e1 * t272 + 0.90577500000000000000e0 * t269 + 0.11003250000000000000e0 * t275 + 0.12417750000000000000e0 * t279))
t312 = (0.1e1 + 0.27812500000000000000e-1 * t269) * t311
t321 = lax_cond(t264, 0, t93 * (-t287 + t194 * (-0.3109070e-1 * (0.1e1 + 0.51370000000000000000e-1 * t269) * t298 + t287 - 0.19751673498613801407e-1 * t312) + 0.19751673498613801407e-1 * t194 * t312) / 0.2e1)
t325 = (0.1e1 + 0.2e0 * t115) ** 2
t326 = 0.1e1 / t325
t332 = t136 ** 2
t335 = t138 ** 2
t340 = t122 * t127 * t326
t343 = t332 ** 2
t345 = t335 ** 2
t353 = t152 * t154 * t156
t356 = math.sqrt(t353)
t359 = t353 ** 0.15e1
t362 = t173 * t153 * t176
t368 = math.log(0.1e1 + 0.16081979498692535067e2 / (0.37978500000000000000e1 * t356 + 0.89690000000000000000e0 * t353 + 0.20477500000000000000e0 * t359 + 0.12323500000000000000e0 * t362))
t370 = 0.621814e-1 * (0.1e1 + 0.53425000000000000000e-1 * t353) * t368
t371 = t1 ** 2
t372 = t371 ** 2
t373 = t2 ** 2
t374 = t373 ** 2
t378 = lax_cond(t6, t15, t159 * t5)
t380 = lax_cond(t92, t15, t265 * t91)
t382 = (t378 + t380 - 0.2e1) * t193
t393 = math.log(0.1e1 + 0.32163958997385070134e2 / (0.70594500000000000000e1 * t356 + 0.15494250000000000000e1 * t353 + 0.42077500000000000000e0 * t359 + 0.15629250000000000000e0 * t362))
t406 = math.log(0.1e1 + 0.29608749977793437516e2 / (0.51785000000000000000e1 * t356 + 0.90577500000000000000e0 * t353 + 0.11003250000000000000e0 * t359 + 0.12417750000000000000e0 * t362))
t407 = (0.1e1 + 0.27812500000000000000e-1 * t353) * t406
t417 = t47 + t115
t421 = 0.1e1 + 0.30000000000000000000e-2 * t47 + 0.30000000000000000000e-2 * t115
t426 = t417 ** 2
t429 = t421 ** 2
t437 = 0.3e1 / 0.10e2 * t72 * (t76 + t135)
t439 = 0.2e1 * t76 * t135
t440 = t437 - t439
t442 = t437 + t439
t446 = t440 ** 2
t449 = t442 ** 2
res = t7 * (t28 + t36) * (t39 + 0.4e-2 * t40 * s0 * t46 * t50 + 0.16e-4 * t54 * t55 * t60 / t61 + t66 * t77 * t80 + 0.4e-2 * t82 * t77 * t80 * t47 * t50) / 0.2e1 + t93 * (t102 + t106) * (t39 + 0.4e-2 * t40 * s2 * t114 * t118 + 0.16e-4 * t54 * t122 * t127 / t128 + t66 * t136 * t139 + 0.4e-2 * t82 * t136 * t139 * t115 * t118) / 0.2e1 + t228 * (t229 + 0.4e-1 * t230 * t55 * t60 * t235 + t239 * t77 * t80 + 0.4e-1 * t242 * t243 * t77 / t246 / t79 * t251 + 0.4e-1 * t254 * t255 / t257 * t251) + t321 * (t229 + 0.4e-1 * t230 * t122 * t127 * t326 + t239 * t136 * t139 + 0.4e-1 * t242 * t332 * t136 / t335 / t138 * t340 + 0.4e-1 * t254 * t343 / t345 * t340) + (-t370 + t372 / t374 * t382 * (-0.3109070e-1 * (0.1e1 + 0.51370000000000000000e-1 * t353) * t393 + t370 - 0.19751673498613801407e-1 * t407) + 0.19751673498613801407e-1 * t382 * t407 - t228 - t321) * (params_a_c_os[0] + 0.30000000000000000000e-2 * params_a_c_os[1] * t417 / t421 + 0.27000000000000000000e-7 * params_a_c_os[2] * t426 * t417 / t429 / t421 + params_a_c_os[3] * t440 / t442 + 0.90000000000000000000e-5 * params_a_c_os[4] * t446 * t440 / t449 / t442 * t426 / t429)
