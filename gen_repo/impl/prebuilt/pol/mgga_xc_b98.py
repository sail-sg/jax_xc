t1 = 3 ** (0.1e1 / 0.3e1)
t2 = math.pi ** (0.1e1 / 0.3e1)
t4 = t1 / t2
t5 = r0 + r1
t6 = 0.1e1 / t5
t7 = r0 * t6
t10 = p_a_zeta_threshold ** (0.1e1 / 0.3e1)
t11 = t10 * p_a_zeta_threshold
t12 = 2 ** (0.1e1 / 0.3e1)
t14 = t7 ** (0.1e1 / 0.3e1)
t18 = lax_cond(0.2e1 * t7 <= p_a_zeta_threshold, t11, 0.2e1 * t12 * r0 * t6 * t14)
t19 = t5 ** (0.1e1 / 0.3e1)
t21 = r0 ** (0.1e1 / 0.3e1)
t22 = t21 ** 2
t24 = 0.1e1 / t22 / r0
t26 = r0 ** 2
t34 = 6 ** (0.1e1 / 0.3e1)
t36 = math.pi ** 2
t37 = t36 ** (0.1e1 / 0.3e1)
t38 = t37 ** 2
t39 = 0.1e1 / t38
t40 = (tau0 * t24 - s0 / t22 / t26 / 0.8e1 - l0 * t24 / 0.4e1) * t34 * t39
t42 = 0.1e1 - 0.5e1 / 0.9e1 * t40
t43 = t42 ** 2
t45 = 0.1e1 + 0.121e-1 * t43
t46 = math.sqrt(t45)
t57 = r1 * t6
t61 = t57 ** (0.1e1 / 0.3e1)
t65 = lax_cond(0.2e1 * t57 <= p_a_zeta_threshold, t11, 0.2e1 * t12 * r1 * t6 * t61)
t67 = r1 ** (0.1e1 / 0.3e1)
t68 = t67 ** 2
t70 = 0.1e1 / t68 / r1
t72 = r1 ** 2
t81 = (tau1 * t70 - s2 / t68 / t72 / 0.8e1 - l1 * t70 / 0.4e1) * t34 * t39
t83 = 0.1e1 - 0.5e1 / 0.9e1 * t81
t84 = t83 ** 2
t86 = 0.1e1 + 0.121e-1 * t84
t87 = math.sqrt(t86)
t99 = r0 - r1
t100 = t99 * t6
t101 = 0.1e1 + t100
t102 = t101 <= p_a_zeta_threshold
t103 = jnp.logical_or(r0 <= p_a_dens_threshold, t102)
t104 = lax_cond(t102, p_a_zeta_threshold, t101)
t106 = (0.1e1 / math.pi) ** (0.1e1 / 0.3e1)
t107 = t1 * t106
t108 = 4 ** (0.1e1 / 0.3e1)
t109 = t108 ** 2
t110 = t107 * t109
t111 = 0.1e1 / t19
t112 = t111 * t12
t113 = 0.1e1 / t10
t114 = t101 ** (0.1e1 / 0.3e1)
t116 = lax_cond(t102, t113, 0.1e1 / t114)
t118 = t110 * t112 * t116
t121 = math.sqrt(t118)
t124 = t118 ** 0.15e1
t126 = t1 ** 2
t127 = t106 ** 2
t128 = t126 * t127
t129 = t128 * t108
t130 = t19 ** 2
t131 = 0.1e1 / t130
t132 = t12 ** 2
t133 = t131 * t132
t134 = t116 ** 2
t136 = t129 * t133 * t134
t142 = math.log(0.1e1 + 0.16081824322151104822e2 / (0.37978500000000000000e1 * t121 + 0.89690000000000000000e0 * t118 + 0.20477500000000000000e0 * t124 + 0.12323500000000000000e0 * t136))
t144 = 0.62182e-1 * (0.1e1 + 0.53425000000000000000e-1 * t118) * t142
t147 = lax_cond(0.2e1 <= p_a_zeta_threshold, t11, 0.2e1 * t12)
t149 = lax_cond(0.0e0 <= p_a_zeta_threshold, t11, 0)
t153 = 0.1e1 / (0.2e1 * t12 - 0.2e1)
t154 = (t147 + t149 - 0.2e1) * t153
t165 = math.log(0.1e1 + 0.32164683177870697974e2 / (0.70594500000000000000e1 * t121 + 0.15494250000000000000e1 * t118 + 0.42077500000000000000e0 * t124 + 0.15629250000000000000e0 * t136))
t178 = math.log(0.1e1 + 0.29608574643216675549e2 / (0.51785000000000000000e1 * t121 + 0.90577500000000000000e0 * t118 + 0.11003250000000000000e0 * t124 + 0.12417750000000000000e0 * t136))
t179 = (0.1e1 + 0.27812500000000000000e-1 * t118) * t178
t188 = lax_cond(t103, 0, t104 * (-t144 + t154 * (-0.31090e-1 * (0.1e1 + 0.51370000000000000000e-1 * t118) * t165 + t144 - 0.19751789702565206229e-1 * t179) + 0.19751789702565206229e-1 * t154 * t179) / 0.2e1)
t190 = 0.1e1 + 0.256e1 * t43
t191 = math.sqrt(t190)
t208 = 0.1e1 - t100
t209 = t208 <= p_a_zeta_threshold
t210 = jnp.logical_or(r1 <= p_a_dens_threshold, t209)
t211 = lax_cond(t209, p_a_zeta_threshold, t208)
t212 = t208 ** (0.1e1 / 0.3e1)
t214 = lax_cond(t209, t113, 0.1e1 / t212)
t216 = t110 * t112 * t214
t219 = math.sqrt(t216)
t222 = t216 ** 0.15e1
t224 = t214 ** 2
t226 = t129 * t133 * t224
t232 = math.log(0.1e1 + 0.16081824322151104822e2 / (0.37978500000000000000e1 * t219 + 0.89690000000000000000e0 * t216 + 0.20477500000000000000e0 * t222 + 0.12323500000000000000e0 * t226))
t234 = 0.62182e-1 * (0.1e1 + 0.53425000000000000000e-1 * t216) * t232
t245 = math.log(0.1e1 + 0.32164683177870697974e2 / (0.70594500000000000000e1 * t219 + 0.15494250000000000000e1 * t216 + 0.42077500000000000000e0 * t222 + 0.15629250000000000000e0 * t226))
t258 = math.log(0.1e1 + 0.29608574643216675549e2 / (0.51785000000000000000e1 * t219 + 0.90577500000000000000e0 * t216 + 0.11003250000000000000e0 * t222 + 0.12417750000000000000e0 * t226))
t259 = (0.1e1 + 0.27812500000000000000e-1 * t216) * t258
t268 = lax_cond(t210, 0, t211 * (-t234 + t154 * (-0.31090e-1 * (0.1e1 + 0.51370000000000000000e-1 * t216) * t245 + t234 - 0.19751789702565206229e-1 * t259) + 0.19751789702565206229e-1 * t154 * t259) / 0.2e1)
t270 = 0.1e1 + 0.256e1 * t84
t271 = math.sqrt(t270)
t288 = t107 * t109 * t111
t291 = math.sqrt(t288)
t294 = t288 ** 0.15e1
t297 = t128 * t108 * t131
t303 = math.log(0.1e1 + 0.16081824322151104822e2 / (0.37978500000000000000e1 * t291 + 0.89690000000000000000e0 * t288 + 0.20477500000000000000e0 * t294 + 0.12323500000000000000e0 * t297))
t305 = 0.62182e-1 * (0.1e1 + 0.53425000000000000000e-1 * t288) * t303
t306 = t99 ** 2
t307 = t306 ** 2
t308 = t5 ** 2
t309 = t308 ** 2
t313 = lax_cond(t102, t11, t114 * t101)
t315 = lax_cond(t209, t11, t212 * t208)
t317 = (t313 + t315 - 0.2e1) * t153
t328 = math.log(0.1e1 + 0.32164683177870697974e2 / (0.70594500000000000000e1 * t291 + 0.15494250000000000000e1 * t288 + 0.42077500000000000000e0 * t294 + 0.15629250000000000000e0 * t297))
t341 = math.log(0.1e1 + 0.29608574643216675549e2 / (0.51785000000000000000e1 * t291 + 0.90577500000000000000e0 * t288 + 0.11003250000000000000e0 * t294 + 0.12417750000000000000e0 * t297))
t342 = (0.1e1 + 0.27812500000000000000e-1 * t288) * t341
t352 = 0.1e1 - 0.5e1 / 0.18e2 * t40 - 0.5e1 / 0.18e2 * t81
t353 = t352 ** 2
t355 = 0.1e1 + 0.196e-1 * t353
t356 = math.sqrt(t355)
res = -0.3e1 / 0.8e1 * t4 * t18 * t19 * (0.8085e0 + 0.73502e-1 * t42 / t46 + 0.171820e-2 * t43 / t45) - 0.3e1 / 0.8e1 * t4 * t65 * t19 * (0.8085e0 + 0.73502e-1 * t83 / t87 + 0.171820e-2 * t84 / t86) + t188 * (0.2606e0 - 0.153728e1 * t42 / t191 + 0.2309888e1 * t43 / t190) * (0.1e1 - s0 / r0 / tau0 / 0.8e1) + t268 * (0.2606e0 - 0.153728e1 * t83 / t271 + 0.2309888e1 * t84 / t270) * (0.1e1 - s2 / r1 / tau1 / 0.8e1) + (-t305 + t307 / t309 * t317 * (-0.31090e-1 * (0.1e1 + 0.51370000000000000000e-1 * t288) * t328 + t305 - 0.19751789702565206229e-1 * t342) + 0.19751789702565206229e-1 * t317 * t342 - t188 - t268) * (0.12033e1 - 0.318038e0 * t352 / t356 + 0.1880816e-1 * t353 / t355)
