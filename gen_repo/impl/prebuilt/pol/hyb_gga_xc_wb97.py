t2 = r0 - r1
t3 = r0 + r1
t5 = t2 / t3
t6 = 0.1e1 + t5
t7 = t6 <= p_a_zeta_threshold
t8 = jnp.logical_or(r0 <= p_a_dens_threshold, t7)
t9 = 3 ** (0.1e1 / 0.3e1)
t12 = (0.1e1 / math.pi) ** (0.1e1 / 0.3e1)
t13 = 4 ** (0.1e1 / 0.3e1)
t14 = t13 ** 2
t16 = 2 ** (0.1e1 / 0.3e1)
t17 = t12 * t14 * t16
t19 = 0.2e1 <= p_a_zeta_threshold
t20 = p_a_zeta_threshold ** (0.1e1 / 0.3e1)
t21 = t20 * p_a_zeta_threshold
t23 = lax_cond(t19, t21, 0.2e1 * t16)
t24 = t3 ** (0.1e1 / 0.3e1)
t25 = t23 * t24
t27 = (0.1e1 / t6) ** (0.1e1 / 0.3e1)
t29 = 9 ** (0.1e1 / 0.3e1)
t30 = t29 ** 2
t31 = t12 ** 2
t34 = t30 * t31 * p_a_cam_omega * t9
t35 = 0.1e1 / t24
t36 = t35 * t16
t37 = lax_cond(t19, t20, t16)
t38 = 0.1e1 / t37
t42 = t34 * t36 * t27 * t38 / 0.18e2
t44 = 0.135e1 < t42
t45 = lax_cond(t44, t42, 0.135e1)
t46 = t45 ** 2
t49 = t46 ** 2
t52 = t49 * t46
t55 = t49 ** 2
t67 = t55 ** 2
t71 = lax_cond(t44, 0.135e1, t42)
t72 = math.sqrt(math.pi)
t75 = math.erf(0.1e1 / t71 / 0.2e1)
t77 = t71 ** 2
t80 = math.exp(-0.1e1 / t77 / 0.4e1)
t91 = lax_cond(0.135e1 <= t42, 0.1e1 / t46 / 0.36e2 - 0.1e1 / t49 / 0.960e3 + 0.1e1 / t52 / 0.26880e5 - 0.1e1 / t55 / 0.829440e6 + 0.1e1 / t55 / t46 / 0.28385280e8 - 0.1e1 / t55 / t49 / 0.1073479680e10 + 0.1e1 / t55 / t52 / 0.44590694400e11 - 0.1e1 / t67 / 0.2021444812800e13, 0.1e1 - 0.8e1 / 0.3e1 * t71 * (t72 * t75 + 0.2e1 * t71 * (t80 - 0.3e1 / 0.2e1 - 0.2e1 * t77 * (t80 - 0.1e1))))
t93 = params_a_c_x[0]
t94 = params_a_c_x[1]
t96 = r0 ** 2
t97 = r0 ** (0.1e1 / 0.3e1)
t98 = t97 ** 2
t100 = 0.1e1 / t98 / t96
t101 = s0 * t100
t103 = 0.1e1 + 0.4e-2 * t101
t108 = params_a_c_x[2]
t109 = s0 ** 2
t111 = t96 ** 2
t114 = 0.1e1 / t97 / t111 / r0
t115 = t103 ** 2
t120 = params_a_c_x[3]
t121 = t109 * s0
t123 = t111 ** 2
t124 = 0.1e1 / t123
t130 = params_a_c_x[4]
t131 = t109 ** 2
t135 = 0.1e1 / t98 / t123 / t96
t136 = t115 ** 2
t146 = lax_cond(t8, 0, -0.3e1 / 0.64e2 * t6 * t9 * t17 * t25 / t27 * t91 * (t93 + 0.4e-2 * t94 * s0 * t100 / t103 + 0.16e-4 * t108 * t109 * t114 / t115 + 0.64e-7 * t120 * t121 * t124 / t115 / t103 + 0.256e-9 * t130 * t131 * t135 / t136))
t148 = 0.1e1 - t5
t149 = t148 <= p_a_zeta_threshold
t150 = jnp.logical_or(r1 <= p_a_dens_threshold, t149)
t154 = (0.1e1 / t148) ** (0.1e1 / 0.3e1)
t159 = t34 * t36 * t154 * t38 / 0.18e2
t161 = 0.135e1 < t159
t162 = lax_cond(t161, t159, 0.135e1)
t163 = t162 ** 2
t166 = t163 ** 2
t169 = t166 * t163
t172 = t166 ** 2
t184 = t172 ** 2
t188 = lax_cond(t161, 0.135e1, t159)
t191 = math.erf(0.1e1 / t188 / 0.2e1)
t193 = t188 ** 2
t196 = math.exp(-0.1e1 / t193 / 0.4e1)
t207 = lax_cond(0.135e1 <= t159, 0.1e1 / t163 / 0.36e2 - 0.1e1 / t166 / 0.960e3 + 0.1e1 / t169 / 0.26880e5 - 0.1e1 / t172 / 0.829440e6 + 0.1e1 / t172 / t163 / 0.28385280e8 - 0.1e1 / t172 / t166 / 0.1073479680e10 + 0.1e1 / t172 / t169 / 0.44590694400e11 - 0.1e1 / t184 / 0.2021444812800e13, 0.1e1 - 0.8e1 / 0.3e1 * t188 * (t72 * t191 + 0.2e1 * t188 * (t196 - 0.3e1 / 0.2e1 - 0.2e1 * t193 * (t196 - 0.1e1))))
t210 = r1 ** 2
t211 = r1 ** (0.1e1 / 0.3e1)
t212 = t211 ** 2
t214 = 0.1e1 / t212 / t210
t215 = s2 * t214
t217 = 0.1e1 + 0.4e-2 * t215
t222 = s2 ** 2
t224 = t210 ** 2
t227 = 0.1e1 / t211 / t224 / r1
t228 = t217 ** 2
t233 = t222 * s2
t235 = t224 ** 2
t236 = 0.1e1 / t235
t242 = t222 ** 2
t246 = 0.1e1 / t212 / t235 / t210
t247 = t228 ** 2
t257 = lax_cond(t150, 0, -0.3e1 / 0.64e2 * t148 * t9 * t17 * t25 / t154 * t207 * (t93 + 0.4e-2 * t94 * s2 * t214 / t217 + 0.16e-4 * t108 * t222 * t227 / t228 + 0.64e-7 * t120 * t233 * t236 / t228 / t217 + 0.256e-9 * t130 * t242 * t246 / t247))
t258 = lax_cond(t7, p_a_zeta_threshold, t6)
t259 = t9 * t12
t260 = t259 * t14
t261 = 0.1e1 / t20
t262 = t6 ** (0.1e1 / 0.3e1)
t264 = lax_cond(t7, t261, 0.1e1 / t262)
t266 = t260 * t36 * t264
t269 = math.sqrt(t266)
t272 = t266 ** 0.15e1
t274 = t9 ** 2
t275 = t274 * t31
t276 = t275 * t13
t277 = t24 ** 2
t278 = 0.1e1 / t277
t279 = t16 ** 2
t280 = t278 * t279
t281 = t264 ** 2
t283 = t276 * t280 * t281
t289 = math.log(0.1e1 + 0.16081824322151104822e2 / (0.37978500000000000000e1 * t269 + 0.89690000000000000000e0 * t266 + 0.20477500000000000000e0 * t272 + 0.12323500000000000000e0 * t283))
t291 = 0.62182e-1 * (0.1e1 + 0.53425000000000000000e-1 * t266) * t289
t293 = lax_cond(0.0e0 <= p_a_zeta_threshold, t21, 0)
t297 = 0.1e1 / (0.2e1 * t16 - 0.2e1)
t298 = (t23 + t293 - 0.2e1) * t297
t309 = math.log(0.1e1 + 0.32164683177870697974e2 / (0.70594500000000000000e1 * t269 + 0.15494250000000000000e1 * t266 + 0.42077500000000000000e0 * t272 + 0.15629250000000000000e0 * t283))
t322 = math.log(0.1e1 + 0.29608574643216675549e2 / (0.51785000000000000000e1 * t269 + 0.90577500000000000000e0 * t266 + 0.11003250000000000000e0 * t272 + 0.12417750000000000000e0 * t283))
t323 = (0.1e1 + 0.27812500000000000000e-1 * t266) * t322
t332 = lax_cond(t8, 0, t258 * (-t291 + t298 * (-0.31090e-1 * (0.1e1 + 0.51370000000000000000e-1 * t266) * t309 + t291 - 0.19751789702565206229e-1 * t323) + 0.19751789702565206229e-1 * t298 * t323) / 0.2e1)
t333 = params_a_c_ss[0]
t334 = params_a_c_ss[1]
t337 = 0.1e1 + 0.2e0 * t101
t342 = params_a_c_ss[2]
t344 = t337 ** 2
t349 = params_a_c_ss[3]
t356 = params_a_c_ss[4]
t358 = t344 ** 2
t365 = lax_cond(t149, p_a_zeta_threshold, t148)
t366 = t148 ** (0.1e1 / 0.3e1)
t368 = lax_cond(t149, t261, 0.1e1 / t366)
t370 = t260 * t36 * t368
t373 = math.sqrt(t370)
t376 = t370 ** 0.15e1
t378 = t368 ** 2
t380 = t276 * t280 * t378
t386 = math.log(0.1e1 + 0.16081824322151104822e2 / (0.37978500000000000000e1 * t373 + 0.89690000000000000000e0 * t370 + 0.20477500000000000000e0 * t376 + 0.12323500000000000000e0 * t380))
t388 = 0.62182e-1 * (0.1e1 + 0.53425000000000000000e-1 * t370) * t386
t399 = math.log(0.1e1 + 0.32164683177870697974e2 / (0.70594500000000000000e1 * t373 + 0.15494250000000000000e1 * t370 + 0.42077500000000000000e0 * t376 + 0.15629250000000000000e0 * t380))
t412 = math.log(0.1e1 + 0.29608574643216675549e2 / (0.51785000000000000000e1 * t373 + 0.90577500000000000000e0 * t370 + 0.11003250000000000000e0 * t376 + 0.12417750000000000000e0 * t380))
t413 = (0.1e1 + 0.27812500000000000000e-1 * t370) * t412
t422 = lax_cond(t150, 0, t365 * (-t388 + t298 * (-0.31090e-1 * (0.1e1 + 0.51370000000000000000e-1 * t370) * t399 + t388 - 0.19751789702565206229e-1 * t413) + 0.19751789702565206229e-1 * t298 * t413) / 0.2e1)
t425 = 0.1e1 + 0.2e0 * t215
t431 = t425 ** 2
t443 = t431 ** 2
t451 = t259 * t14 * t35
t454 = math.sqrt(t451)
t457 = t451 ** 0.15e1
t460 = t275 * t13 * t278
t466 = math.log(0.1e1 + 0.16081824322151104822e2 / (0.37978500000000000000e1 * t454 + 0.89690000000000000000e0 * t451 + 0.20477500000000000000e0 * t457 + 0.12323500000000000000e0 * t460))
t468 = 0.62182e-1 * (0.1e1 + 0.53425000000000000000e-1 * t451) * t466
t469 = t2 ** 2
t470 = t469 ** 2
t471 = t3 ** 2
t472 = t471 ** 2
t476 = lax_cond(t7, t21, t262 * t6)
t478 = lax_cond(t149, t21, t366 * t148)
t480 = (t476 + t478 - 0.2e1) * t297
t491 = math.log(0.1e1 + 0.32164683177870697974e2 / (0.70594500000000000000e1 * t454 + 0.15494250000000000000e1 * t451 + 0.42077500000000000000e0 * t457 + 0.15629250000000000000e0 * t460))
t504 = math.log(0.1e1 + 0.29608574643216675549e2 / (0.51785000000000000000e1 * t454 + 0.90577500000000000000e0 * t451 + 0.11003250000000000000e0 * t457 + 0.12417750000000000000e0 * t460))
t505 = (0.1e1 + 0.27812500000000000000e-1 * t451) * t504
t515 = t101 + t215
t519 = 0.1e1 + 0.30000000000000000000e-2 * t101 + 0.30000000000000000000e-2 * t215
t524 = t515 ** 2
t526 = t519 ** 2
t538 = t524 ** 2
t540 = t526 ** 2
res = t146 + t257 + t332 * (t333 + 0.2e0 * t334 * s0 * t100 / t337 + 0.4e-1 * t342 * t109 * t114 / t344 + 0.8e-2 * t349 * t121 * t124 / t344 / t337 + 0.16e-2 * t356 * t131 * t135 / t358) + t422 * (t333 + 0.2e0 * t334 * s2 * t214 / t425 + 0.4e-1 * t342 * t222 * t227 / t431 + 0.8e-2 * t349 * t233 * t236 / t431 / t425 + 0.16e-2 * t356 * t242 * t246 / t443) + (-t468 + t470 / t472 * t480 * (-0.31090e-1 * (0.1e1 + 0.51370000000000000000e-1 * t451) * t491 + t468 - 0.19751789702565206229e-1 * t505) + 0.19751789702565206229e-1 * t480 * t505 - t332 - t422) * (params_a_c_ab[0] + 0.30000000000000000000e-2 * params_a_c_ab[1] * t515 / t519 + 0.90000000000000000000e-5 * params_a_c_ab[2] * t524 / t526 + 0.27000000000000000000e-7 * params_a_c_ab[3] * t524 * t515 / t526 / t519 + 0.81000000000000000000e-10 * params_a_c_ab[4] * t538 / t540)
