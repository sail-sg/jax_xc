t2 = r0 - r1
t3 = r0 + r1
t5 = t2 / t3
t6 = 0.1e1 + t5
t7 = t6 <= p_a_zeta_threshold
t8 = jnp.logical_or(r0 <= p_a_dens_threshold, t7)
t9 = lax_cond(t7, p_a_zeta_threshold, t6)
t10 = 3 ** (0.1e1 / 0.3e1)
t12 = (0.1e1 / math.pi) ** (0.1e1 / 0.3e1)
t13 = t10 * t12
t14 = 4 ** (0.1e1 / 0.3e1)
t15 = t14 ** 2
t16 = t13 * t15
t17 = t3 ** (0.1e1 / 0.3e1)
t18 = 0.1e1 / t17
t19 = 2 ** (0.1e1 / 0.3e1)
t20 = t18 * t19
t21 = p_a_zeta_threshold ** (0.1e1 / 0.3e1)
t22 = 0.1e1 / t21
t23 = t6 ** (0.1e1 / 0.3e1)
t25 = lax_cond(t7, t22, 0.1e1 / t23)
t27 = t16 * t20 * t25
t30 = math.sqrt(t27)
t33 = t27 ** 0.15e1
t35 = t10 ** 2
t36 = t12 ** 2
t37 = t35 * t36
t38 = t37 * t14
t39 = t17 ** 2
t40 = 0.1e1 / t39
t41 = t19 ** 2
t42 = t40 * t41
t43 = t25 ** 2
t45 = t38 * t42 * t43
t51 = math.log(0.1e1 + 0.16081979498692535067e2 / (0.37978500000000000000e1 * t30 + 0.89690000000000000000e0 * t27 + 0.20477500000000000000e0 * t33 + 0.12323500000000000000e0 * t45))
t53 = 0.621814e-1 * (0.1e1 + 0.53425000000000000000e-1 * t27) * t51
t55 = t21 * p_a_zeta_threshold
t57 = lax_cond(0.2e1 <= p_a_zeta_threshold, t55, 0.2e1 * t19)
t59 = lax_cond(0.0e0 <= p_a_zeta_threshold, t55, 0)
t63 = 0.1e1 / (0.2e1 * t19 - 0.2e1)
t64 = (t57 + t59 - 0.2e1) * t63
t75 = math.log(0.1e1 + 0.32163958997385070134e2 / (0.70594500000000000000e1 * t30 + 0.15494250000000000000e1 * t27 + 0.42077500000000000000e0 * t33 + 0.15629250000000000000e0 * t45))
t88 = math.log(0.1e1 + 0.29608749977793437516e2 / (0.51785000000000000000e1 * t30 + 0.90577500000000000000e0 * t27 + 0.11003250000000000000e0 * t33 + 0.12417750000000000000e0 * t45))
t89 = (0.1e1 + 0.27812500000000000000e-1 * t27) * t88
t98 = lax_cond(t8, 0, t9 * (-t53 + t64 * (-0.3109070e-1 * (0.1e1 + 0.51370000000000000000e-1 * t27) * t75 + t53 - 0.19751673498613801407e-1 * t89) + 0.19751673498613801407e-1 * t64 * t89) / 0.2e1)
t99 = params_a_dss[0]
t100 = r0 ** 2
t101 = r0 ** (0.1e1 / 0.3e1)
t102 = t101 ** 2
t104 = 0.1e1 / t102 / t100
t105 = s0 * t104
t109 = 0.2e1 * tau0 / t102 / r0
t110 = 6 ** (0.1e1 / 0.3e1)
t111 = t110 ** 2
t112 = math.pi ** 2
t113 = t112 ** (0.1e1 / 0.3e1)
t114 = t113 ** 2
t115 = t111 * t114
t116 = 0.3e1 / 0.5e1 * t115
t119 = 0.1e1 + params_a_alpha_ss * (t105 + t109 - t116)
t122 = params_a_dss[1]
t125 = params_a_dss[2]
t126 = t109 - t116
t129 = t119 ** 2
t132 = params_a_dss[3]
t133 = s0 ** 2
t135 = t100 ** 2
t140 = params_a_dss[4]
t144 = params_a_dss[5]
t145 = t126 ** 2
t161 = 0.1e1 - t5
t162 = t161 <= p_a_zeta_threshold
t163 = jnp.logical_or(r1 <= p_a_dens_threshold, t162)
t164 = lax_cond(t162, p_a_zeta_threshold, t161)
t165 = t161 ** (0.1e1 / 0.3e1)
t167 = lax_cond(t162, t22, 0.1e1 / t165)
t169 = t16 * t20 * t167
t172 = math.sqrt(t169)
t175 = t169 ** 0.15e1
t177 = t167 ** 2
t179 = t38 * t42 * t177
t185 = math.log(0.1e1 + 0.16081979498692535067e2 / (0.37978500000000000000e1 * t172 + 0.89690000000000000000e0 * t169 + 0.20477500000000000000e0 * t175 + 0.12323500000000000000e0 * t179))
t187 = 0.621814e-1 * (0.1e1 + 0.53425000000000000000e-1 * t169) * t185
t198 = math.log(0.1e1 + 0.32163958997385070134e2 / (0.70594500000000000000e1 * t172 + 0.15494250000000000000e1 * t169 + 0.42077500000000000000e0 * t175 + 0.15629250000000000000e0 * t179))
t211 = math.log(0.1e1 + 0.29608749977793437516e2 / (0.51785000000000000000e1 * t172 + 0.90577500000000000000e0 * t169 + 0.11003250000000000000e0 * t175 + 0.12417750000000000000e0 * t179))
t212 = (0.1e1 + 0.27812500000000000000e-1 * t169) * t211
t221 = lax_cond(t163, 0, t164 * (-t187 + t64 * (-0.3109070e-1 * (0.1e1 + 0.51370000000000000000e-1 * t169) * t198 + t187 - 0.19751673498613801407e-1 * t212) + 0.19751673498613801407e-1 * t64 * t212) / 0.2e1)
t222 = r1 ** 2
t223 = r1 ** (0.1e1 / 0.3e1)
t224 = t223 ** 2
t226 = 0.1e1 / t224 / t222
t227 = s2 * t226
t231 = 0.2e1 * tau1 / t224 / r1
t234 = 0.1e1 + params_a_alpha_ss * (t227 + t231 - t116)
t239 = t231 - t116
t242 = t234 ** 2
t245 = s2 ** 2
t247 = t222 ** 2
t255 = t239 ** 2
t271 = t13 * t15 * t18
t274 = math.sqrt(t271)
t277 = t271 ** 0.15e1
t280 = t37 * t14 * t40
t286 = math.log(0.1e1 + 0.16081979498692535067e2 / (0.37978500000000000000e1 * t274 + 0.89690000000000000000e0 * t271 + 0.20477500000000000000e0 * t277 + 0.12323500000000000000e0 * t280))
t288 = 0.621814e-1 * (0.1e1 + 0.53425000000000000000e-1 * t271) * t286
t289 = t2 ** 2
t290 = t289 ** 2
t291 = t3 ** 2
t292 = t291 ** 2
t296 = lax_cond(t7, t55, t23 * t6)
t298 = lax_cond(t162, t55, t165 * t161)
t300 = (t296 + t298 - 0.2e1) * t63
t311 = math.log(0.1e1 + 0.32163958997385070134e2 / (0.70594500000000000000e1 * t274 + 0.15494250000000000000e1 * t271 + 0.42077500000000000000e0 * t277 + 0.15629250000000000000e0 * t280))
t324 = math.log(0.1e1 + 0.29608749977793437516e2 / (0.51785000000000000000e1 * t274 + 0.90577500000000000000e0 * t271 + 0.11003250000000000000e0 * t277 + 0.12417750000000000000e0 * t280))
t325 = (0.1e1 + 0.27812500000000000000e-1 * t271) * t324
t334 = 0.6e1 / 0.5e1 * t115
t337 = 0.1e1 + params_a_alpha_ab * (t105 + t227 + t109 + t231 - t334)
t341 = t105 + t227
t344 = t109 + t231 - t334
t347 = t337 ** 2
t351 = t341 ** 2
t357 = t344 ** 2
res = t98 * (t99 / t119 + (t122 * s0 * t104 + t125 * t126) / t129 + (t132 * t133 / t101 / t135 / r0 + t140 * s0 * t104 * t126 + t144 * t145) / t129 / t119) * (0.1e1 - s0 / r0 / tau0 / 0.8e1) + t221 * (t99 / t234 + (t122 * s2 * t226 + t125 * t239) / t242 + (t132 * t245 / t223 / t247 / r1 + t140 * s2 * t226 * t239 + t144 * t255) / t242 / t234) * (0.1e1 - s2 / r1 / tau1 / 0.8e1) + (-t288 + t290 / t292 * t300 * (-0.3109070e-1 * (0.1e1 + 0.51370000000000000000e-1 * t271) * t311 + t288 - 0.19751673498613801407e-1 * t325) + 0.19751673498613801407e-1 * t300 * t325 - t98 - t221) * (params_a_dab[0] / t337 + (params_a_dab[1] * t341 + params_a_dab[2] * t344) / t347 + (params_a_dab[4] * t341 * t344 + params_a_dab[3] * t351 + params_a_dab[5] * t357) / t347 / t337)
