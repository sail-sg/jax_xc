t2 = 3 ** (0.1e1 / 0.3e1)
t3 = math.pi ** (0.1e1 / 0.3e1)
t5 = t2 / t3
t6 = r0 + r1
t7 = 0.1e1 / t6
t10 = 0.2e1 * r0 * t7 <= p_a_zeta_threshold
t11 = p_a_zeta_threshold - 0.1e1
t14 = 0.2e1 * r1 * t7 <= p_a_zeta_threshold
t15 = -t11
t17 = (r0 - r1) * t7
t18 = lax_cond(t14, t15, t17)
t19 = lax_cond(t10, t11, t18)
t20 = 0.1e1 + t19
t22 = p_a_zeta_threshold ** (0.1e1 / 0.3e1)
t23 = t22 * p_a_zeta_threshold
t24 = t20 ** (0.1e1 / 0.3e1)
t26 = lax_cond(t20 <= p_a_zeta_threshold, t23, t24 * t20)
t27 = t6 ** (0.1e1 / 0.3e1)
t29 = s0 ** 2
t30 = t29 * s0
t31 = r0 ** 2
t35 = tau0 ** 2
t41 = t29 / t31 / t35
t44 = (0.1e1 + t41 / 0.64e2) ** 2
t50 = 6 ** (0.1e1 / 0.3e1)
t52 = math.pi ** 2
t53 = t52 ** (0.1e1 / 0.3e1)
t54 = t53 ** 2
t55 = 0.1e1 / t54
t57 = r0 ** (0.1e1 / 0.3e1)
t58 = t57 ** 2
t60 = 0.1e1 / t58 / t31
t67 = s0 * t60
t70 = (tau0 / t58 / r0 - t67 / 0.8e1) * t50
t73 = 0.5e1 / 0.9e1 * t70 * t55 - 0.1e1
t78 = math.sqrt(0.1e1 + 0.22222222222222222222e0 * t70 * t55 * t73)
t82 = t50 * t55
t83 = t82 * t67
t85 = 0.9e1 / 0.20e2 * t73 / t78 + t83 / 0.36e2
t86 = t85 ** 2
t89 = t50 ** 2
t92 = t89 / t53 / t52
t93 = t31 ** 2
t98 = t92 * t29 / t57 / t93 / r0
t101 = math.sqrt(0.162e3 * t41 + 0.50e2 * t98)
t106 = t52 ** 2
t107 = 0.1e1 / t106
t109 = t93 ** 2
t113 = (0.10e2 / 0.81e2 + 0.41982617187500000000e-2 * t30 / t31 / r0 / t35 / tau0 / t44) * t50 * t55 * s0 * t60 / 0.24e2 + 0.146e3 / 0.2025e4 * t86 - 0.73e2 / 0.97200e5 * t85 * t101 + 0.26505934954444613795e-4 * t98 + 0.19577914932045745128e-2 * t41 + 0.10647076474622770919e-3 * t107 * t30 / t109
t116 = (0.1e1 + 0.58733744796137235383e-1 * t83) ** 2
t118 = t113 / t116
t120 = math.exp(-0.18630000000000000000e-3 * t118)
t125 = t113 ** 2
t126 = t116 ** 2
t130 = math.exp(-0.15090300000000000000e-2 * t125 / t126)
t141 = lax_cond(r0 <= p_a_dens_threshold, 0, -0.3e1 / 0.8e1 * t5 * t26 * t27 * (0.1e1 + t118 * t120 / (0.1e1 + t118) + (0.1e1 - t130) * (0.10e2 / 0.81e2 / t113 * t116 - 0.1e1)))
t143 = lax_cond(t10, t15, -t17)
t144 = lax_cond(t14, t11, t143)
t145 = 0.1e1 + t144
t147 = t145 ** (0.1e1 / 0.3e1)
t149 = lax_cond(t145 <= p_a_zeta_threshold, t23, t147 * t145)
t151 = s2 ** 2
t152 = t151 * s2
t153 = r1 ** 2
t157 = tau1 ** 2
t163 = t151 / t153 / t157
t166 = (0.1e1 + t163 / 0.64e2) ** 2
t174 = r1 ** (0.1e1 / 0.3e1)
t175 = t174 ** 2
t177 = 0.1e1 / t175 / t153
t184 = s2 * t177
t187 = (tau1 / t175 / r1 - t184 / 0.8e1) * t50
t190 = 0.5e1 / 0.9e1 * t187 * t55 - 0.1e1
t195 = math.sqrt(0.1e1 + 0.22222222222222222222e0 * t187 * t55 * t190)
t199 = t82 * t184
t201 = 0.9e1 / 0.20e2 * t190 / t195 + t199 / 0.36e2
t202 = t201 ** 2
t205 = t153 ** 2
t210 = t92 * t151 / t174 / t205 / r1
t213 = math.sqrt(0.162e3 * t163 + 0.50e2 * t210)
t219 = t205 ** 2
t223 = (0.10e2 / 0.81e2 + 0.41982617187500000000e-2 * t152 / t153 / r1 / t157 / tau1 / t166) * t50 * t55 * s2 * t177 / 0.24e2 + 0.146e3 / 0.2025e4 * t202 - 0.73e2 / 0.97200e5 * t201 * t213 + 0.26505934954444613795e-4 * t210 + 0.19577914932045745128e-2 * t163 + 0.10647076474622770919e-3 * t107 * t152 / t219
t226 = (0.1e1 + 0.58733744796137235383e-1 * t199) ** 2
t228 = t223 / t226
t230 = math.exp(-0.18630000000000000000e-3 * t228)
t235 = t223 ** 2
t236 = t226 ** 2
t240 = math.exp(-0.15090300000000000000e-2 * t235 / t236)
t251 = lax_cond(r1 <= p_a_dens_threshold, 0, -0.3e1 / 0.8e1 * t5 * t149 * t27 * (0.1e1 + t228 * t230 / (0.1e1 + t228) + (0.1e1 - t240) * (0.10e2 / 0.81e2 / t223 * t226 - 0.1e1)))
res = t141 + t251
