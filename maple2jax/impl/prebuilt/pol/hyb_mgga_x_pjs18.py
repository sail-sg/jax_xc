t2 = 3 ** (0.1e1 / 0.3e1)
t3 = math.pi ** (0.1e1 / 0.3e1)
t5 = t2 / t3
t6 = r0 + r1
t7 = 0.1e1 / t6
t10 = 0.2e1 * r0 * t7 <= p_a_zeta_threshold
t11 = p_a_zeta_threshold - 0.1e1
t14 = 0.2e1 * r1 * t7 <= p_a_zeta_threshold
t15 = -t11
t17 = (r0 - r1) * t7
t18 = lax_cond(t14, t15, t17)
t19 = lax_cond(t10, t11, t18)
t20 = 0.1e1 + t19
t22 = p_a_zeta_threshold ** (0.1e1 / 0.3e1)
t23 = t22 * p_a_zeta_threshold
t24 = t20 ** (0.1e1 / 0.3e1)
t26 = lax_cond(t20 <= p_a_zeta_threshold, t23, t24 * t20)
t27 = t6 ** (0.1e1 / 0.3e1)
t29 = 9 ** (0.1e1 / 0.3e1)
t30 = t29 ** 2
t32 = (0.1e1 / math.pi) ** (0.1e1 / 0.3e1)
t33 = t32 ** 2
t35 = t30 * t33 * p_a_cam_omega
t37 = t2 / t27
t38 = 6 ** (0.1e1 / 0.3e1)
t39 = math.pi ** 2
t40 = t39 ** (0.1e1 / 0.3e1)
t41 = t40 ** 2
t42 = 0.1e1 / t41
t43 = t38 * t42
t44 = r0 ** 2
t45 = r0 ** (0.1e1 / 0.3e1)
t46 = t45 ** 2
t49 = s0 / t46 / t44
t52 = t38 ** 2
t55 = t52 / t40 / t39
t56 = s0 ** 2
t57 = t44 ** 2
t64 = 0.1e1 + 0.15045488888888888889e0 * t43 * t49 + 0.26899490462262948000e-2 * t55 * t56 / t45 / t57 / r0
t65 = t64 ** (0.1e1 / 0.10e2)
t68 = 0.1e1 + t17 <= p_a_zeta_threshold
t70 = 0.1e1 - t17 <= p_a_zeta_threshold
t71 = lax_cond(t70, t15, t17)
t72 = lax_cond(t68, t11, t71)
t73 = 0.1e1 + t72
t75 = t73 ** (0.1e1 / 0.3e1)
t76 = lax_cond(t73 <= p_a_zeta_threshold, t22, t75)
t81 = t35 * t37 / t65 / t76 / 0.18e2
t83 = lax_cond(t81 < 0.1e-9, 0.1e-9, t81)
t85 = 0.135e1 < t83
t86 = lax_cond(t85, t83, 0.135e1)
t87 = t86 ** 2
t90 = t87 ** 2
t93 = t90 * t87
t96 = t90 ** 2
t108 = t96 ** 2
t112 = lax_cond(t85, 0.135e1, t83)
t113 = math.sqrt(math.pi)
t116 = math.erf(0.1e1 / t112 / 0.2e1)
t118 = t112 ** 2
t121 = math.exp(-0.1e1 / t118 / 0.4e1)
t132 = lax_cond(0.135e1 <= t83, 0.1e1 / t87 / 0.36e2 - 0.1e1 / t90 / 0.960e3 + 0.1e1 / t93 / 0.26880e5 - 0.1e1 / t96 / 0.829440e6 + 0.1e1 / t96 / t87 / 0.28385280e8 - 0.1e1 / t96 / t90 / 0.1073479680e10 + 0.1e1 / t96 / t93 / 0.44590694400e11 - 0.1e1 / t108 / 0.2021444812800e13, 0.1e1 - 0.8e1 / 0.3e1 * t112 * (t113 * t116 + 0.2e1 * t112 * (t121 - 0.3e1 / 0.2e1 - 0.2e1 * t118 * (t121 - 0.1e1))))
t133 = t64 ** (0.1e1 / 0.5e1)
t137 = 0.27e0 < t83
t138 = lax_cond(t137, t83, 0.27e0)
t139 = t138 ** 2
t140 = t139 ** 2
t141 = t140 ** 2
t142 = t141 * t140
t143 = t141 ** 2
t144 = t143 ** 2
t148 = t140 * t139
t149 = t141 * t148
t159 = t141 * t139
t174 = 0.1e1 / t144 / t142 / 0.33929038000650146833571361325056000000e38 - 0.1e1 / t144 / t149 / 0.3511556992918352140755776405766144000000e40 + 0.3e1 / 0.2240e4 / t140 - 0.1e1 / t148 / 0.11520e5 + 0.3e1 / 0.788480e6 / t141 - 0.1e1 / t159 / 0.7454720e7 + 0.1e1 / t142 / 0.247726080e9 - 0.1e1 / t149 / 0.9358540800e10 + 0.1e1 / t143 / 0.394474291200e12 - 0.1e1 / t143 / t139 / 0.18311911833600e14 + 0.1e1 / t143 / t140 / 0.927028425523200e15
t207 = -0.1e1 / t143 / t148 / 0.50785035485184000e17 + 0.1e1 / t143 / t141 / 0.2991700272218112000e19 - 0.1e1 / t143 / t159 / 0.188514051721003008000e21 + 0.1e1 / t143 / t142 / 0.12648942844388573184000e23 - 0.1e1 / t143 / t149 / 0.900231674141645733888000e24 + 0.1e1 / t144 / 0.67726520292999771979776000e26 - 0.1e1 / t144 / t139 / 0.5369745537516410492682240000e28 + 0.1e1 / t144 / t140 / 0.447473103488807905221672960000e30 - 0.1e1 / t144 / t148 / 0.39097165634742908368485089280000e32 + 0.1e1 / t144 / t141 / 0.3573852336994573837102806466560000e34 - 0.1e1 / t144 / t159 / 0.341095116070365837848137621831680000e36
t209 = lax_cond(t137, 0.27e0, t83)
t210 = t209 ** 2
t212 = t210 ** 2
t213 = 0.64e2 * t212
t217 = math.exp(-0.1e1 / t210 / 0.4e1)
t223 = math.erf(0.1e1 / t209 / 0.2e1)
t230 = lax_cond(0.27e0 <= t83, t174 + t207, 0.1e1 + 0.24e2 * t210 * ((0.20e2 * t210 - t213) * t217 - 0.3e1 - 0.36e2 * t210 + t213 + 0.10e2 * t209 * t113 * t223))
t236 = 0.4366239600000000000e-1 * t52 * t41
t240 = t133 ** 2
t241 = 0.1e1 / t240
t246 = 0.32e0 < t83
t247 = lax_cond(t246, t83, 0.32e0)
t248 = t247 ** 2
t249 = t248 ** 2
t252 = t249 * t248
t255 = t249 ** 2
t258 = t255 * t248
t261 = t255 * t249
t264 = t255 * t252
t267 = t255 ** 2
t291 = t267 ** 2
t303 = 0.3e1 / 0.7840e4 / t249 - 0.1e1 / t252 / 0.56448e5 + 0.5e1 / 0.8515584e7 / t255 - 0.1e1 / t258 / 0.61501440e8 + 0.1e1 / t261 / 0.2530344960e10 - 0.1e1 / t264 / 0.115811942400e12 + 0.1e1 / t267 / 0.5811921223680e13 - 0.1e1 / t267 / t248 / 0.316612955602944e15 + 0.1e1 / t267 / t249 / 0.18582706166169600e17 - 0.1e1 / t267 / t252 / 0.1168055816159232000e19 + 0.1e1 / t267 / t255 / 0.78244468658012160000e20 - 0.1e1 / t267 / t258 / 0.5562511054710453043200e22 + 0.1e1 / t267 / t261 / 0.418174050435486229463040e24 - 0.1e1 / t267 / t264 / 0.33139778504339333578752000e26 + 0.1e1 / t291 / 0.2760851680179343645999104000e28 - 0.1e1 / t291 / t248 / 0.241191070393445437962977280000e30 + 0.1e1 / t291 / t249 / 0.22046293272414372635684634624000e32 - 0.1e1 / t291 / t252 / 0.2104209454461863328391867505049600e34
t304 = lax_cond(t246, 0.32e0, t83)
t306 = t304 ** 2
t307 = t306 * t304
t309 = t306 ** 2
t314 = t309 ** 2
t320 = math.exp(-0.1e1 / t306 / 0.4e1)
t334 = math.erf(0.1e1 / t304 / 0.2e1)
t341 = lax_cond(0.32e0 <= t83, t303, 0.1e1 + 0.8e1 / 0.7e1 * t304 * ((-0.576e3 * t309 * t304 - 0.122880e6 * t314 * t304 + 0.3840e4 * t309 * t307 - 0.8e1 * t304 + 0.256e3 * t307) * t320 + 0.24e2 * t307 * (0.5120e4 * t309 * t306 + 0.224e3 * t306 - 0.1440e4 * t309 - 0.35e2) + 0.2e1 * t113 * (-0.2e1 + 0.60e2 * t306) * t334))
t351 = lax_cond(r0 <= p_a_dens_threshold, 0, -0.3e1 / 0.8e1 * t5 * t26 * t27 * (t132 / t133 + 0.35e2 / 0.81e2 * t230 * (-0.14554132000000000000e0 * tau0 / t46 / r0 + t236 + 0.42296278333333333333e-1 * t49) * t43 * t241 + 0.26329605555555555556e-1 * t341 * t38 * t42 * t49 * t241))
t353 = lax_cond(t10, t15, -t17)
t354 = lax_cond(t14, t11, t353)
t355 = 0.1e1 + t354
t357 = t355 ** (0.1e1 / 0.3e1)
t359 = lax_cond(t355 <= p_a_zeta_threshold, t23, t357 * t355)
t361 = r1 ** 2
t362 = r1 ** (0.1e1 / 0.3e1)
t363 = t362 ** 2
t366 = s2 / t363 / t361
t369 = s2 ** 2
t370 = t361 ** 2
t377 = 0.1e1 + 0.15045488888888888889e0 * t43 * t366 + 0.26899490462262948000e-2 * t55 * t369 / t362 / t370 / r1
t378 = t377 ** (0.1e1 / 0.10e2)
t380 = lax_cond(t68, t15, -t17)
t381 = lax_cond(t70, t11, t380)
t382 = 0.1e1 + t381
t384 = t382 ** (0.1e1 / 0.3e1)
t385 = lax_cond(t382 <= p_a_zeta_threshold, t22, t384)
t390 = t35 * t37 / t378 / t385 / 0.18e2
t392 = lax_cond(t390 < 0.1e-9, 0.1e-9, t390)
t394 = 0.135e1 < t392
t395 = lax_cond(t394, t392, 0.135e1)
t396 = t395 ** 2
t399 = t396 ** 2
t402 = t399 * t396
t405 = t399 ** 2
t417 = t405 ** 2
t421 = lax_cond(t394, 0.135e1, t392)
t424 = math.erf(0.1e1 / t421 / 0.2e1)
t426 = t421 ** 2
t429 = math.exp(-0.1e1 / t426 / 0.4e1)
t440 = lax_cond(0.135e1 <= t392, 0.1e1 / t396 / 0.36e2 - 0.1e1 / t399 / 0.960e3 + 0.1e1 / t402 / 0.26880e5 - 0.1e1 / t405 / 0.829440e6 + 0.1e1 / t405 / t396 / 0.28385280e8 - 0.1e1 / t405 / t399 / 0.1073479680e10 + 0.1e1 / t405 / t402 / 0.44590694400e11 - 0.1e1 / t417 / 0.2021444812800e13, 0.1e1 - 0.8e1 / 0.3e1 * t421 * (t113 * t424 + 0.2e1 * t421 * (t429 - 0.3e1 / 0.2e1 - 0.2e1 * t426 * (t429 - 0.1e1))))
t441 = t377 ** (0.1e1 / 0.5e1)
t445 = 0.27e0 < t392
t446 = lax_cond(t445, t392, 0.27e0)
t447 = t446 ** 2
t448 = t447 ** 2
t449 = t448 ** 2
t450 = t449 * t448
t451 = t449 ** 2
t452 = t451 ** 2
t456 = t448 * t447
t457 = t449 * t456
t467 = t449 * t447
t482 = 0.1e1 / t452 / t450 / 0.33929038000650146833571361325056000000e38 - 0.1e1 / t452 / t457 / 0.3511556992918352140755776405766144000000e40 + 0.3e1 / 0.2240e4 / t448 - 0.1e1 / t456 / 0.11520e5 + 0.3e1 / 0.788480e6 / t449 - 0.1e1 / t467 / 0.7454720e7 + 0.1e1 / t450 / 0.247726080e9 - 0.1e1 / t457 / 0.9358540800e10 + 0.1e1 / t451 / 0.394474291200e12 - 0.1e1 / t451 / t447 / 0.18311911833600e14 + 0.1e1 / t451 / t448 / 0.927028425523200e15
t515 = -0.1e1 / t451 / t456 / 0.50785035485184000e17 + 0.1e1 / t451 / t449 / 0.2991700272218112000e19 - 0.1e1 / t451 / t467 / 0.188514051721003008000e21 + 0.1e1 / t451 / t450 / 0.12648942844388573184000e23 - 0.1e1 / t451 / t457 / 0.900231674141645733888000e24 + 0.1e1 / t452 / 0.67726520292999771979776000e26 - 0.1e1 / t452 / t447 / 0.5369745537516410492682240000e28 + 0.1e1 / t452 / t448 / 0.447473103488807905221672960000e30 - 0.1e1 / t452 / t456 / 0.39097165634742908368485089280000e32 + 0.1e1 / t452 / t449 / 0.3573852336994573837102806466560000e34 - 0.1e1 / t452 / t467 / 0.341095116070365837848137621831680000e36
t517 = lax_cond(t445, 0.27e0, t392)
t518 = t517 ** 2
t520 = t518 ** 2
t521 = 0.64e2 * t520
t525 = math.exp(-0.1e1 / t518 / 0.4e1)
t531 = math.erf(0.1e1 / t517 / 0.2e1)
t538 = lax_cond(0.27e0 <= t392, t482 + t515, 0.1e1 + 0.24e2 * t518 * ((0.20e2 * t518 - t521) * t525 - 0.3e1 - 0.36e2 * t518 + t521 + 0.10e2 * t517 * t113 * t531))
t546 = t441 ** 2
t547 = 0.1e1 / t546
t552 = 0.32e0 < t392
t553 = lax_cond(t552, t392, 0.32e0)
t554 = t553 ** 2
t555 = t554 ** 2
t558 = t555 * t554
t561 = t555 ** 2
t564 = t561 * t554
t567 = t561 * t555
t570 = t561 * t558
t573 = t561 ** 2
t597 = t573 ** 2
t609 = 0.3e1 / 0.7840e4 / t555 - 0.1e1 / t558 / 0.56448e5 + 0.5e1 / 0.8515584e7 / t561 - 0.1e1 / t564 / 0.61501440e8 + 0.1e1 / t567 / 0.2530344960e10 - 0.1e1 / t570 / 0.115811942400e12 + 0.1e1 / t573 / 0.5811921223680e13 - 0.1e1 / t573 / t554 / 0.316612955602944e15 + 0.1e1 / t573 / t555 / 0.18582706166169600e17 - 0.1e1 / t573 / t558 / 0.1168055816159232000e19 + 0.1e1 / t573 / t561 / 0.78244468658012160000e20 - 0.1e1 / t573 / t564 / 0.5562511054710453043200e22 + 0.1e1 / t573 / t567 / 0.418174050435486229463040e24 - 0.1e1 / t573 / t570 / 0.33139778504339333578752000e26 + 0.1e1 / t597 / 0.2760851680179343645999104000e28 - 0.1e1 / t597 / t554 / 0.241191070393445437962977280000e30 + 0.1e1 / t597 / t555 / 0.22046293272414372635684634624000e32 - 0.1e1 / t597 / t558 / 0.2104209454461863328391867505049600e34
t610 = lax_cond(t552, 0.32e0, t392)
t612 = t610 ** 2
t613 = t612 * t610
t615 = t612 ** 2
t620 = t615 ** 2
t626 = math.exp(-0.1e1 / t612 / 0.4e1)
t640 = math.erf(0.1e1 / t610 / 0.2e1)
t647 = lax_cond(0.32e0 <= t392, t609, 0.1e1 + 0.8e1 / 0.7e1 * t610 * ((-0.576e3 * t615 * t610 - 0.122880e6 * t620 * t610 + 0.3840e4 * t615 * t613 - 0.8e1 * t610 + 0.256e3 * t613) * t626 + 0.24e2 * t613 * (0.5120e4 * t615 * t612 + 0.224e3 * t612 - 0.1440e4 * t615 - 0.35e2) + 0.2e1 * t113 * (-0.2e1 + 0.60e2 * t612) * t640))
t657 = lax_cond(r1 <= p_a_dens_threshold, 0, -0.3e1 / 0.8e1 * t5 * t359 * t27 * (t440 / t441 + 0.35e2 / 0.81e2 * t538 * (-0.14554132000000000000e0 * tau1 / t363 / r1 + t236 + 0.42296278333333333333e-1 * t366) * t43 * t547 + 0.26329605555555555556e-1 * t647 * t38 * t42 * t366 * t547))
res = t351 + t657
