t2 = r0 - r1
t3 = r0 + r1
t5 = t2 / t3
t6 = 0.1e1 + t5
t7 = t6 <= p_a_zeta_threshold
t8 = jnp.logical_or(r0 <= p_a_dens_threshold, t7)
t9 = lax_cond(t7, p_a_zeta_threshold, t6)
t10 = 3 ** (0.1e1 / 0.3e1)
t12 = (0.1e1 / math.pi) ** (0.1e1 / 0.3e1)
t13 = t10 * t12
t14 = 4 ** (0.1e1 / 0.3e1)
t15 = t14 ** 2
t16 = t13 * t15
t17 = t3 ** (0.1e1 / 0.3e1)
t18 = 0.1e1 / t17
t19 = 2 ** (0.1e1 / 0.3e1)
t20 = t18 * t19
t21 = p_a_zeta_threshold ** (0.1e1 / 0.3e1)
t22 = 0.1e1 / t21
t23 = t6 ** (0.1e1 / 0.3e1)
t25 = lax_cond(t7, t22, 0.1e1 / t23)
t27 = t16 * t20 * t25
t30 = math.sqrt(t27)
t33 = t27 ** 0.15e1
t35 = t10 ** 2
t36 = t12 ** 2
t37 = t35 * t36
t38 = t37 * t14
t39 = t17 ** 2
t40 = 0.1e1 / t39
t41 = t19 ** 2
t42 = t40 * t41
t43 = t25 ** 2
t45 = t38 * t42 * t43
t51 = math.log(0.1e1 + 0.16081979498692535067e2 / (0.37978500000000000000e1 * t30 + 0.89690000000000000000e0 * t27 + 0.20477500000000000000e0 * t33 + 0.12323500000000000000e0 * t45))
t53 = 0.621814e-1 * (0.1e1 + 0.53425000000000000000e-1 * t27) * t51
t55 = t21 * p_a_zeta_threshold
t57 = lax_cond(0.2e1 <= p_a_zeta_threshold, t55, 0.2e1 * t19)
t59 = lax_cond(0.0e0 <= p_a_zeta_threshold, t55, 0)
t63 = 0.1e1 / (0.2e1 * t19 - 0.2e1)
t64 = (t57 + t59 - 0.2e1) * t63
t75 = math.log(0.1e1 + 0.32163958997385070134e2 / (0.70594500000000000000e1 * t30 + 0.15494250000000000000e1 * t27 + 0.42077500000000000000e0 * t33 + 0.15629250000000000000e0 * t45))
t88 = math.log(0.1e1 + 0.29608749977793437516e2 / (0.51785000000000000000e1 * t30 + 0.90577500000000000000e0 * t27 + 0.11003250000000000000e0 * t33 + 0.12417750000000000000e0 * t45))
t89 = (0.1e1 + 0.27812500000000000000e-1 * t27) * t88
t98 = lax_cond(t8, 0, t9 * (-t53 + t64 * (-0.3109070e-1 * (0.1e1 + 0.51370000000000000000e-1 * t27) * t75 + t53 - 0.19751673498613801407e-1 * t89) + 0.19751673498613801407e-1 * t64 * t89) / 0.2e1)
t100 = r0 ** (0.1e1 / 0.3e1)
t101 = t100 ** 2
t111 = 6 ** (0.1e1 / 0.3e1)
t113 = math.pi ** 2
t114 = t113 ** (0.1e1 / 0.3e1)
t115 = t114 ** 2
t116 = 0.1e1 / t115
t118 = r0 ** 2
t120 = 0.1e1 / t101 / t118
t123 = (params_a_css * s0 * t120 + 0.1e1) ** 2
t130 = 0.1e1 - t5
t131 = t130 <= p_a_zeta_threshold
t132 = jnp.logical_or(r1 <= p_a_dens_threshold, t131)
t133 = lax_cond(t131, p_a_zeta_threshold, t130)
t134 = t130 ** (0.1e1 / 0.3e1)
t136 = lax_cond(t131, t22, 0.1e1 / t134)
t138 = t16 * t20 * t136
t141 = math.sqrt(t138)
t144 = t138 ** 0.15e1
t146 = t136 ** 2
t148 = t38 * t42 * t146
t154 = math.log(0.1e1 + 0.16081979498692535067e2 / (0.37978500000000000000e1 * t141 + 0.89690000000000000000e0 * t138 + 0.20477500000000000000e0 * t144 + 0.12323500000000000000e0 * t148))
t156 = 0.621814e-1 * (0.1e1 + 0.53425000000000000000e-1 * t138) * t154
t167 = math.log(0.1e1 + 0.32163958997385070134e2 / (0.70594500000000000000e1 * t141 + 0.15494250000000000000e1 * t138 + 0.42077500000000000000e0 * t144 + 0.15629250000000000000e0 * t148))
t180 = math.log(0.1e1 + 0.29608749977793437516e2 / (0.51785000000000000000e1 * t141 + 0.90577500000000000000e0 * t138 + 0.11003250000000000000e0 * t144 + 0.12417750000000000000e0 * t148))
t181 = (0.1e1 + 0.27812500000000000000e-1 * t138) * t180
t190 = lax_cond(t132, 0, t133 * (-t156 + t64 * (-0.3109070e-1 * (0.1e1 + 0.51370000000000000000e-1 * t138) * t167 + t156 - 0.19751673498613801407e-1 * t181) + 0.19751673498613801407e-1 * t64 * t181) / 0.2e1)
t192 = r1 ** (0.1e1 / 0.3e1)
t193 = t192 ** 2
t205 = r1 ** 2
t207 = 0.1e1 / t193 / t205
t210 = (params_a_css * s2 * t207 + 0.1e1) ** 2
t217 = t13 * t15 * t18
t220 = math.sqrt(t217)
t223 = t217 ** 0.15e1
t226 = t37 * t14 * t40
t232 = math.log(0.1e1 + 0.16081979498692535067e2 / (0.37978500000000000000e1 * t220 + 0.89690000000000000000e0 * t217 + 0.20477500000000000000e0 * t223 + 0.12323500000000000000e0 * t226))
t234 = 0.621814e-1 * (0.1e1 + 0.53425000000000000000e-1 * t217) * t232
t235 = t2 ** 2
t236 = t235 ** 2
t237 = t3 ** 2
t238 = t237 ** 2
t242 = lax_cond(t7, t55, t23 * t6)
t244 = lax_cond(t131, t55, t134 * t130)
t246 = (t242 + t244 - 0.2e1) * t63
t257 = math.log(0.1e1 + 0.32163958997385070134e2 / (0.70594500000000000000e1 * t220 + 0.15494250000000000000e1 * t217 + 0.42077500000000000000e0 * t223 + 0.15629250000000000000e0 * t226))
t270 = math.log(0.1e1 + 0.29608749977793437516e2 / (0.51785000000000000000e1 * t220 + 0.90577500000000000000e0 * t217 + 0.11003250000000000000e0 * t223 + 0.12417750000000000000e0 * t226))
t271 = (0.1e1 + 0.27812500000000000000e-1 * t217) * t270
res = 0.5e1 / 0.9e1 * t98 * tau0 / t101 / r0 * (0.1e1 - s0 / r0 / tau0 / 0.8e1) * t111 * t116 / t123 + 0.5e1 / 0.9e1 * t190 * tau1 / t193 / r1 * (0.1e1 - s2 / r1 / tau1 / 0.8e1) * t111 * t116 / t210 + (-t234 + t236 / t238 * t246 * (-0.3109070e-1 * (0.1e1 + 0.51370000000000000000e-1 * t217) * t257 + t234 - 0.19751673498613801407e-1 * t271) + 0.19751673498613801407e-1 * t246 * t271 - t98 - t190) / (0.1e1 + params_a_copp * (s0 * t120 + s2 * t207))
