t1 = r0 ** 2
t2 = r0 ** (0.1e1 / 0.3e1)
t3 = t2 ** 2
t6 = s0 / t3 / t1
t7 = r0 - r1
t8 = r0 + r1
t10 = t7 / t8
t11 = 0.1e1 + t10
t12 = t11 / 0.2e1
t13 = t12 ** (0.1e1 / 0.3e1)
t14 = t13 ** 2
t15 = t14 * t12
t17 = r1 ** 2
t18 = r1 ** (0.1e1 / 0.3e1)
t19 = t18 ** 2
t22 = s2 / t19 / t17
t23 = 0.1e1 - t10
t24 = t23 / 0.2e1
t25 = t24 ** (0.1e1 / 0.3e1)
t26 = t25 ** 2
t27 = t26 * t24
t30 = (t6 * t15 + t22 * t27) ** 2
t40 = (tau0 / t3 / r0 * t15 + tau1 / t19 / r1 * t27) ** 2
t45 = 3 ** (0.1e1 / 0.3e1)
t47 = (0.1e1 / math.pi) ** (0.1e1 / 0.3e1)
t48 = t45 * t47
t49 = 4 ** (0.1e1 / 0.3e1)
t50 = t49 ** 2
t51 = t8 ** (0.1e1 / 0.3e1)
t52 = 0.1e1 / t51
t54 = t48 * t50 * t52
t57 = math.sqrt(t54)
t60 = t54 ** 0.15e1
t62 = t45 ** 2
t63 = t47 ** 2
t64 = t62 * t63
t65 = t51 ** 2
t66 = 0.1e1 / t65
t68 = t64 * t49 * t66
t74 = math.log(0.1e1 + 0.16081979498692535067e2 / (0.37978500000000000000e1 * t57 + 0.89690000000000000000e0 * t54 + 0.20477500000000000000e0 * t60 + 0.12323500000000000000e0 * t68))
t76 = 0.621814e-1 * (0.1e1 + 0.53425000000000000000e-1 * t54) * t74
t77 = t7 ** 2
t78 = t77 ** 2
t79 = t8 ** 2
t80 = t79 ** 2
t83 = t11 <= p_a_zeta_threshold
t84 = p_a_zeta_threshold ** (0.1e1 / 0.3e1)
t85 = t84 * p_a_zeta_threshold
t86 = t11 ** (0.1e1 / 0.3e1)
t88 = lax_cond(t83, t85, t86 * t11)
t89 = t23 <= p_a_zeta_threshold
t90 = t23 ** (0.1e1 / 0.3e1)
t92 = lax_cond(t89, t85, t90 * t23)
t94 = 2 ** (0.1e1 / 0.3e1)
t97 = 0.1e1 / (0.2e1 * t94 - 0.2e1)
t98 = (t88 + t92 - 0.2e1) * t97
t109 = math.log(0.1e1 + 0.32163958997385070134e2 / (0.70594500000000000000e1 * t57 + 0.15494250000000000000e1 * t54 + 0.42077500000000000000e0 * t60 + 0.15629250000000000000e0 * t68))
t122 = math.log(0.1e1 + 0.29608749977793437516e2 / (0.51785000000000000000e1 * t57 + 0.90577500000000000000e0 * t54 + 0.11003250000000000000e0 * t60 + 0.12417750000000000000e0 * t68))
t123 = (0.1e1 + 0.27812500000000000000e-1 * t54) * t122
t127 = t78 / t80 * t98 * (-0.3109070e-1 * (0.1e1 + 0.51370000000000000000e-1 * t54) * t109 + t76 - 0.19751673498613801407e-1 * t123)
t129 = 0.19751673498613801407e-1 * t98 * t123
t130 = math.log(0.2e1)
t131 = 0.1e1 - t130
t132 = math.pi ** 2
t134 = t131 / t132
t135 = t84 ** 2
t136 = t86 ** 2
t137 = lax_cond(t83, t135, t136)
t138 = t90 ** 2
t139 = lax_cond(t89, t135, t138)
t141 = t137 / 0.2e1 + t139 / 0.2e1
t142 = t141 ** 2
t143 = t142 * t141
t145 = s0 + 0.2e1 * s1 + s2
t153 = 0.1e1 / t47 * t49
t157 = 0.1e1 / t131
t158 = t157 * t132
t164 = math.exp(-(-t76 + t127 + t129) * t157 * t132 / t143)
t166 = 0.1e1 / (t164 - 0.1e1)
t167 = t145 ** 2
t173 = t94 ** 2
t174 = t142 ** 2
t177 = 0.1e1 / t63
t183 = t145 / t51 / t79 * t94 / t142 * t62 * t153 / 0.96e2 + 0.21720231316129303386e-4 * t158 * t166 * t167 / t65 / t80 * t173 / t174 * t45 * t177 * t50
t194 = math.log(0.1e1 + 0.6672455060314922e-1 * t183 * t157 * t132 / (0.1e1 + 0.6672455060314922e-1 * t158 * t166 * t183))
t199 = s0 ** 2
t202 = tau0 ** 2
t205 = jnp.logical_or(r0 <= p_a_dens_threshold, t83)
t206 = t48 * t50
t207 = t52 * t94
t208 = 0.1e1 / t84
t210 = lax_cond(t83, t208, 0.1e1 / t86)
t212 = t206 * t207 * t210
t215 = math.sqrt(t212)
t218 = t212 ** 0.15e1
t220 = t64 * t49
t221 = t66 * t173
t222 = t210 ** 2
t224 = t220 * t221 * t222
t230 = math.log(0.1e1 + 0.16081979498692535067e2 / (0.37978500000000000000e1 * t215 + 0.89690000000000000000e0 * t212 + 0.20477500000000000000e0 * t218 + 0.12323500000000000000e0 * t224))
t232 = 0.621814e-1 * (0.1e1 + 0.53425000000000000000e-1 * t212) * t230
t233 = 0.2e1 <= p_a_zeta_threshold
t235 = lax_cond(t233, t85, 0.2e1 * t94)
t236 = 0.0e0 <= p_a_zeta_threshold
t237 = lax_cond(t236, t85, 0)
t239 = (t235 + t237 - 0.2e1) * t97
t250 = math.log(0.1e1 + 0.32163958997385070134e2 / (0.70594500000000000000e1 * t215 + 0.15494250000000000000e1 * t212 + 0.42077500000000000000e0 * t218 + 0.15629250000000000000e0 * t224))
t263 = math.log(0.1e1 + 0.29608749977793437516e2 / (0.51785000000000000000e1 * t215 + 0.90577500000000000000e0 * t212 + 0.11003250000000000000e0 * t218 + 0.12417750000000000000e0 * t224))
t264 = (0.1e1 + 0.27812500000000000000e-1 * t212) * t263
t267 = t239 * (-0.3109070e-1 * (0.1e1 + 0.51370000000000000000e-1 * t212) * t250 + t232 - 0.19751673498613801407e-1 * t264)
t269 = 0.19751673498613801407e-1 * t239 * t264
t270 = lax_cond(t233, t135, t173)
t271 = lax_cond(t236, t135, 0)
t273 = t270 / 0.2e1 + t271 / 0.2e1
t274 = t273 ** 2
t275 = t274 * t273
t277 = 0.1e1 / t274 * t62
t287 = t132 / t275
t289 = math.exp(-(-t232 + t267 + t269) * t157 * t287)
t291 = 0.1e1 / (t289 - 0.1e1)
t293 = t1 ** 2
t299 = t274 ** 2
t302 = 0.1e1 / t299 * t45 * t177
t303 = t50 * t65
t309 = t6 * t277 * t153 * t51 / t210 / 0.96e2 + 0.21720231316129303386e-4 * t158 * t291 * t199 / t2 / t293 / r0 * t302 * t303 / t222
t320 = math.log(0.1e1 + 0.6672455060314922e-1 * t309 * t157 * t132 / (0.1e1 + 0.6672455060314922e-1 * t158 * t291 * t309))
t324 = lax_cond(t83, p_a_zeta_threshold, t11)
t327 = lax_cond(t205, 0, (t134 * t275 * t320 - t232 + t267 + t269) * t324 / 0.2e1)
t331 = s2 ** 2
t334 = tau1 ** 2
t337 = jnp.logical_or(r1 <= p_a_dens_threshold, t89)
t339 = lax_cond(t89, t208, 0.1e1 / t90)
t341 = t206 * t207 * t339
t344 = math.sqrt(t341)
t347 = t341 ** 0.15e1
t349 = t339 ** 2
t351 = t220 * t221 * t349
t357 = math.log(0.1e1 + 0.16081979498692535067e2 / (0.37978500000000000000e1 * t344 + 0.89690000000000000000e0 * t341 + 0.20477500000000000000e0 * t347 + 0.12323500000000000000e0 * t351))
t359 = 0.621814e-1 * (0.1e1 + 0.53425000000000000000e-1 * t341) * t357
t370 = math.log(0.1e1 + 0.32163958997385070134e2 / (0.70594500000000000000e1 * t344 + 0.15494250000000000000e1 * t341 + 0.42077500000000000000e0 * t347 + 0.15629250000000000000e0 * t351))
t383 = math.log(0.1e1 + 0.29608749977793437516e2 / (0.51785000000000000000e1 * t344 + 0.90577500000000000000e0 * t341 + 0.11003250000000000000e0 * t347 + 0.12417750000000000000e0 * t351))
t384 = (0.1e1 + 0.27812500000000000000e-1 * t341) * t383
t387 = t239 * (-0.3109070e-1 * (0.1e1 + 0.51370000000000000000e-1 * t341) * t370 + t359 - 0.19751673498613801407e-1 * t384)
t389 = 0.19751673498613801407e-1 * t239 * t384
t399 = math.exp(-(-t359 + t387 + t389) * t157 * t287)
t401 = 0.1e1 / (t399 - 0.1e1)
t403 = t17 ** 2
t414 = t22 * t277 * t153 * t51 / t339 / 0.96e2 + 0.21720231316129303386e-4 * t158 * t401 * t331 / t18 / t403 / r1 * t302 * t303 / t349
t425 = math.log(0.1e1 + 0.6672455060314922e-1 * t414 * t157 * t132 / (0.1e1 + 0.6672455060314922e-1 * t158 * t401 * t414))
t429 = lax_cond(t89, p_a_zeta_threshold, t23)
t432 = lax_cond(t337, 0, (t134 * t275 * t425 - t359 + t387 + t389) * t429 / 0.2e1)
res = (0.1e1 + 0.82812500000000000000e-2 * t30 / t40) * (t134 * t143 * t194 + t127 + t129 - t76) - 0.23906250000000000000e-1 * t199 / t1 / t202 * t327 - 0.23906250000000000000e-1 * t331 / t17 / t334 * t432
