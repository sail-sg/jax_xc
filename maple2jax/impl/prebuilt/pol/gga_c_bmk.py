t2 = r0 - r1
t3 = r0 + r1
t5 = t2 / t3
t6 = 0.1e1 + t5
t7 = t6 <= p_a_zeta_threshold
t8 = jnp.logical_or(r0 <= p_a_dens_threshold, t7)
t9 = lax_cond(t7, p_a_zeta_threshold, t6)
t10 = 3 ** (0.1e1 / 0.3e1)
t12 = (0.1e1 / math.pi) ** (0.1e1 / 0.3e1)
t13 = t10 * t12
t14 = 4 ** (0.1e1 / 0.3e1)
t15 = t14 ** 2
t16 = t13 * t15
t17 = t3 ** (0.1e1 / 0.3e1)
t18 = 0.1e1 / t17
t19 = 2 ** (0.1e1 / 0.3e1)
t20 = t18 * t19
t21 = p_a_zeta_threshold ** (0.1e1 / 0.3e1)
t22 = 0.1e1 / t21
t23 = t6 ** (0.1e1 / 0.3e1)
t25 = lax_cond(t7, t22, 0.1e1 / t23)
t27 = t16 * t20 * t25
t30 = math.sqrt(t27)
t33 = t27 ** 0.15e1
t35 = t10 ** 2
t36 = t12 ** 2
t37 = t35 * t36
t38 = t37 * t14
t39 = t17 ** 2
t40 = 0.1e1 / t39
t41 = t19 ** 2
t42 = t40 * t41
t43 = t25 ** 2
t45 = t38 * t42 * t43
t51 = math.log(0.1e1 + 0.16081824322151104822e2 / (0.37978500000000000000e1 * t30 + 0.89690000000000000000e0 * t27 + 0.20477500000000000000e0 * t33 + 0.12323500000000000000e0 * t45))
t53 = 0.62182e-1 * (0.1e1 + 0.53425000000000000000e-1 * t27) * t51
t55 = t21 * p_a_zeta_threshold
t57 = lax_cond(0.2e1 <= p_a_zeta_threshold, t55, 0.2e1 * t19)
t59 = lax_cond(0.0e0 <= p_a_zeta_threshold, t55, 0)
t63 = 0.1e1 / (0.2e1 * t19 - 0.2e1)
t64 = (t57 + t59 - 0.2e1) * t63
t75 = math.log(0.1e1 + 0.32164683177870697974e2 / (0.70594500000000000000e1 * t30 + 0.15494250000000000000e1 * t27 + 0.42077500000000000000e0 * t33 + 0.15629250000000000000e0 * t45))
t88 = math.log(0.1e1 + 0.29608574643216675549e2 / (0.51785000000000000000e1 * t30 + 0.90577500000000000000e0 * t27 + 0.11003250000000000000e0 * t33 + 0.12417750000000000000e0 * t45))
t89 = (0.1e1 + 0.27812500000000000000e-1 * t27) * t88
t98 = lax_cond(t8, 0, t9 * (-t53 + t64 * (-0.31090e-1 * (0.1e1 + 0.51370000000000000000e-1 * t27) * t75 + t53 - 0.19751789702565206229e-1 * t89) + 0.19751789702565206229e-1 * t64 * t89) / 0.2e1)
t99 = params_a_c_ss[0]
t100 = params_a_c_ss[1]
t102 = r0 ** 2
t103 = r0 ** (0.1e1 / 0.3e1)
t104 = t103 ** 2
t106 = 0.1e1 / t104 / t102
t107 = s0 * t106
t109 = 0.1e1 + 0.2e0 * t107
t114 = params_a_c_ss[2]
t115 = s0 ** 2
t117 = t102 ** 2
t121 = t109 ** 2
t126 = params_a_c_ss[3]
t129 = t117 ** 2
t136 = params_a_c_ss[4]
t137 = t115 ** 2
t142 = t121 ** 2
t150 = 0.1e1 - t5
t151 = t150 <= p_a_zeta_threshold
t152 = jnp.logical_or(r1 <= p_a_dens_threshold, t151)
t153 = lax_cond(t151, p_a_zeta_threshold, t150)
t154 = t150 ** (0.1e1 / 0.3e1)
t156 = lax_cond(t151, t22, 0.1e1 / t154)
t158 = t16 * t20 * t156
t161 = math.sqrt(t158)
t164 = t158 ** 0.15e1
t166 = t156 ** 2
t168 = t38 * t42 * t166
t174 = math.log(0.1e1 + 0.16081824322151104822e2 / (0.37978500000000000000e1 * t161 + 0.89690000000000000000e0 * t158 + 0.20477500000000000000e0 * t164 + 0.12323500000000000000e0 * t168))
t176 = 0.62182e-1 * (0.1e1 + 0.53425000000000000000e-1 * t158) * t174
t187 = math.log(0.1e1 + 0.32164683177870697974e2 / (0.70594500000000000000e1 * t161 + 0.15494250000000000000e1 * t158 + 0.42077500000000000000e0 * t164 + 0.15629250000000000000e0 * t168))
t200 = math.log(0.1e1 + 0.29608574643216675549e2 / (0.51785000000000000000e1 * t161 + 0.90577500000000000000e0 * t158 + 0.11003250000000000000e0 * t164 + 0.12417750000000000000e0 * t168))
t201 = (0.1e1 + 0.27812500000000000000e-1 * t158) * t200
t210 = lax_cond(t152, 0, t153 * (-t176 + t64 * (-0.31090e-1 * (0.1e1 + 0.51370000000000000000e-1 * t158) * t187 + t176 - 0.19751789702565206229e-1 * t201) + 0.19751789702565206229e-1 * t64 * t201) / 0.2e1)
t212 = r1 ** 2
t213 = r1 ** (0.1e1 / 0.3e1)
t214 = t213 ** 2
t216 = 0.1e1 / t214 / t212
t217 = s2 * t216
t219 = 0.1e1 + 0.2e0 * t217
t224 = s2 ** 2
t226 = t212 ** 2
t230 = t219 ** 2
t237 = t226 ** 2
t244 = t224 ** 2
t249 = t230 ** 2
t257 = t13 * t15 * t18
t260 = math.sqrt(t257)
t263 = t257 ** 0.15e1
t266 = t37 * t14 * t40
t272 = math.log(0.1e1 + 0.16081824322151104822e2 / (0.37978500000000000000e1 * t260 + 0.89690000000000000000e0 * t257 + 0.20477500000000000000e0 * t263 + 0.12323500000000000000e0 * t266))
t274 = 0.62182e-1 * (0.1e1 + 0.53425000000000000000e-1 * t257) * t272
t275 = t2 ** 2
t276 = t275 ** 2
t277 = t3 ** 2
t278 = t277 ** 2
t282 = lax_cond(t7, t55, t23 * t6)
t284 = lax_cond(t151, t55, t154 * t150)
t286 = (t282 + t284 - 0.2e1) * t63
t297 = math.log(0.1e1 + 0.32164683177870697974e2 / (0.70594500000000000000e1 * t260 + 0.15494250000000000000e1 * t257 + 0.42077500000000000000e0 * t263 + 0.15629250000000000000e0 * t266))
t310 = math.log(0.1e1 + 0.29608574643216675549e2 / (0.51785000000000000000e1 * t260 + 0.90577500000000000000e0 * t257 + 0.11003250000000000000e0 * t263 + 0.12417750000000000000e0 * t266))
t311 = (0.1e1 + 0.27812500000000000000e-1 * t257) * t310
t321 = t107 + t217
t325 = 0.1e1 + 0.30000000000000000000e-2 * t107 + 0.30000000000000000000e-2 * t217
t330 = t321 ** 2
t332 = t325 ** 2
t344 = t330 ** 2
t346 = t332 ** 2
res = t98 * (t99 + 0.2e0 * t100 * s0 * t106 / t109 + 0.4e-1 * t114 * t115 / t103 / t117 / r0 / t121 + 0.8e-2 * t126 * t115 * s0 / t129 / t121 / t109 + 0.16e-2 * t136 * t137 / t104 / t129 / t102 / t142) + t210 * (t99 + 0.2e0 * t100 * s2 * t216 / t219 + 0.4e-1 * t114 * t224 / t213 / t226 / r1 / t230 + 0.8e-2 * t126 * t224 * s2 / t237 / t230 / t219 + 0.16e-2 * t136 * t244 / t214 / t237 / t212 / t249) + (-t274 + t276 / t278 * t286 * (-0.31090e-1 * (0.1e1 + 0.51370000000000000000e-1 * t257) * t297 + t274 - 0.19751789702565206229e-1 * t311) + 0.19751789702565206229e-1 * t286 * t311 - t98 - t210) * (params_a_c_ab[0] + 0.30000000000000000000e-2 * params_a_c_ab[1] * t321 / t325 + 0.90000000000000000000e-5 * params_a_c_ab[2] * t330 / t332 + 0.27000000000000000000e-7 * params_a_c_ab[3] * t330 * t321 / t332 / t325 + 0.81000000000000000000e-10 * params_a_c_ab[4] * t344 / t346)
