t3 = 0.1e1 <= p_a_zeta_threshold
t4 = jnp.logical_or(r0 / 0.2e1 <= p_a_dens_threshold, t3)
t5 = lax_cond(t3, p_a_zeta_threshold, 1)
t6 = p_a_zeta_threshold ** (0.1e1 / 0.3e1)
t8 = lax_cond(t3, 0.1e1 / t6, 1)
t9 = t8 ** 2
t15 = 3 ** (0.1e1 / 0.3e1)
t16 = math.pi ** (0.1e1 / 0.3e1)
t19 = 2 ** (0.1e1 / 0.3e1)
t20 = t19 ** 2
t21 = t15 / t16 * t20
t23 = t6 * p_a_zeta_threshold
t25 = lax_cond(0.2e1 <= p_a_zeta_threshold, t23, 0.2e1 * t19)
t26 = r0 ** (0.1e1 / 0.3e1)
t28 = 0.1e1 / t8
t32 = lax_cond(r0 / t9 / t8 / 0.2e1 <= p_a_dens_threshold, 0, -0.3e1 / 0.16e2 * t21 * t25 * t26 * t28)
t35 = lax_cond(0.0e0 <= p_a_zeta_threshold, t23, 0)
t40 = lax_cond(0.0e0 <= p_a_dens_threshold, 0, -0.3e1 / 0.16e2 * t21 * t35 * t26 * t28)
t44 = lax_cond(t4, 0, t5 * (t32 + t40) / 0.2e1)
t48 = r0 ** 2
t49 = t26 ** 2
t51 = 0.1e1 / t49 / t48
t52 = t20 * t51
t54 = s0 * t20 * t51
t56 = 0.1e1 + 0.4e-2 * t54
t62 = s0 ** 2
t64 = t48 ** 2
t68 = t19 / t26 / t64 / r0
t69 = t56 ** 2
t75 = t62 * s0
t77 = t64 ** 2
t78 = 0.1e1 / t77
t85 = t62 ** 2
t90 = t20 / t49 / t77 / t48
t91 = t69 ** 2
t100 = (0.1e1 / math.pi) ** (0.1e1 / 0.3e1)
t101 = t15 * t100
t102 = 4 ** (0.1e1 / 0.3e1)
t103 = t102 ** 2
t105 = 0.1e1 / t26
t108 = t101 * t103 * t105 * t19 * t8
t111 = math.sqrt(t108)
t114 = t108 ** 0.15e1
t116 = t15 ** 2
t117 = t100 ** 2
t118 = t116 * t117
t120 = 0.1e1 / t49
t123 = t118 * t102 * t120 * t20 * t9
t129 = math.log(0.1e1 + 0.16081824322151104822e2 / (0.37978500000000000000e1 * t111 + 0.89690000000000000000e0 * t108 + 0.20477500000000000000e0 * t114 + 0.12323500000000000000e0 * t123))
t131 = 0.62182e-1 * (0.1e1 + 0.53425000000000000000e-1 * t108) * t129
t135 = 0.1e1 / (0.2e1 * t19 - 0.2e1)
t136 = (t25 + t35 - 0.2e1) * t135
t147 = math.log(0.1e1 + 0.32164683177870697974e2 / (0.70594500000000000000e1 * t111 + 0.15494250000000000000e1 * t108 + 0.42077500000000000000e0 * t114 + 0.15629250000000000000e0 * t123))
t160 = math.log(0.1e1 + 0.29608574643216675549e2 / (0.51785000000000000000e1 * t111 + 0.90577500000000000000e0 * t108 + 0.11003250000000000000e0 * t114 + 0.12417750000000000000e0 * t123))
t161 = (0.1e1 + 0.27812500000000000000e-1 * t108) * t160
t170 = lax_cond(t4, 0, t5 * (-t131 + t136 * (-0.31090e-1 * (0.1e1 + 0.51370000000000000000e-1 * t108) * t147 + t131 - 0.19751789702565206229e-1 * t161) + 0.19751789702565206229e-1 * t136 * t161) / 0.2e1)
t175 = 0.1e1 + 0.2e0 * t54
t182 = t175 ** 2
t196 = t182 ** 2
t205 = t101 * t103 * t105
t208 = math.sqrt(t205)
t211 = t205 ** 0.15e1
t214 = t118 * t102 * t120
t220 = math.log(0.1e1 + 0.16081824322151104822e2 / (0.37978500000000000000e1 * t208 + 0.89690000000000000000e0 * t205 + 0.20477500000000000000e0 * t211 + 0.12323500000000000000e0 * t214))
t223 = lax_cond(t3, t23, 1)
t237 = math.log(0.1e1 + 0.29608574643216675549e2 / (0.51785000000000000000e1 * t208 + 0.90577500000000000000e0 * t205 + 0.11003250000000000000e0 * t211 + 0.12417750000000000000e0 * t214))
t247 = 0.1e1 + 0.6e-2 * t54
t254 = t247 ** 2
t268 = t254 ** 2
res = 0.2e1 * t44 * (params_a_c_x[0] + 0.4e-2 * params_a_c_x[1] * s0 * t52 / t56 + 0.32e-4 * params_a_c_x[2] * t62 * t68 / t69 + 0.256e-6 * params_a_c_x[3] * t75 * t78 / t69 / t56 + 0.1024e-8 * params_a_c_x[4] * t85 * t90 / t91) + 0.2e1 * t170 * (params_a_c_ss[0] + 0.2e0 * params_a_c_ss[1] * s0 * t52 / t175 + 0.8e-1 * params_a_c_ss[2] * t62 * t68 / t182 + 0.32e-1 * params_a_c_ss[3] * t75 * t78 / t182 / t175 + 0.64e-2 * params_a_c_ss[4] * t85 * t90 / t196) + (-0.62182e-1 * (0.1e1 + 0.53425000000000000000e-1 * t205) * t220 + 0.19751789702565206229e-1 * (0.2e1 * t223 - 0.2e1) * t135 * (0.1e1 + 0.27812500000000000000e-1 * t205) * t237 - 0.2e1 * t170) * (params_a_c_ab[0] + 0.6e-2 * params_a_c_ab[1] * s0 * t52 / t247 + 0.72e-4 * params_a_c_ab[2] * t62 * t68 / t254 + 0.864e-6 * params_a_c_ab[3] * t75 * t78 / t254 / t247 + 0.5184e-8 * params_a_c_ab[4] * t85 * t90 / t268)
