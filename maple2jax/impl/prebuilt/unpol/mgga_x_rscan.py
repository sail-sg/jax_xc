t3 = 3 ** (0.1e1 / 0.3e1)
t4 = math.pi ** (0.1e1 / 0.3e1)
t7 = 0.1e1 <= p_a_zeta_threshold
t8 = p_a_zeta_threshold - 0.1e1
t10 = lax_cond(t7, -t8, 0)
t11 = lax_cond(t7, t8, t10)
t12 = 0.1e1 + t11
t14 = p_a_zeta_threshold ** (0.1e1 / 0.3e1)
t16 = t12 ** (0.1e1 / 0.3e1)
t18 = lax_cond(t12 <= p_a_zeta_threshold, t14 * p_a_zeta_threshold, t16 * t12)
t20 = r0 ** (0.1e1 / 0.3e1)
t21 = 6 ** (0.1e1 / 0.3e1)
t22 = math.pi ** 2
t23 = t22 ** (0.1e1 / 0.3e1)
t24 = t23 ** 2
t25 = 0.1e1 / t24
t27 = 2 ** (0.1e1 / 0.3e1)
t28 = t27 ** 2
t30 = r0 ** 2
t31 = t20 ** 2
t34 = s0 * t28 / t31 / t30
t39 = 0.100e3 / 0.6561e4 / params_a_k1 - 0.73e2 / 0.648e3
t40 = t21 ** 2
t45 = s0 ** 2
t47 = t30 ** 2
t48 = t47 * r0
t55 = math.exp(-0.27e2 / 0.80e2 * t39 * t21 * t25 * t34)
t60 = math.sqrt(0.146e3)
t65 = t12 ** 2
t66 = t65 ** 2
t74 = tau0 * t28 / t31 / r0 - t34 / 0.8e1
t76 = lax_cond(0.0e0 < t74, t74, 0)
t77 = t76 ** 2
t79 = t12 * r0
t80 = t79 ** (0.1e1 / 0.3e1)
t81 = t80 ** 2
t88 = 0.3e1 / 0.40e2 * t27 * t81 * t79 * t40 * t24 + params_a_taur / 0.2e1
t89 = t88 ** 2
t106 = t66 * t12 * t48 * t77 * t76 / t89 / t88 / (t28 * t80 * t65 * t12 * t30 * r0 * t77 / t89 / 0.16e2 + params_a_alphar) / 0.32e2
t107 = 0.1e1 - t106
t109 = t107 ** 2
t111 = math.exp(-t109 / 0.2e1)
t115 = (0.7e1 / 0.12960e5 * t60 * t21 * t25 * t34 + t60 * t107 * t111 / 0.100e3) ** 2
t123 = 0.25e1 < t106
t124 = lax_cond(t123, 0.25e1, t106)
t126 = t124 ** 2
t128 = t126 * t124
t130 = t126 ** 2
t139 = lax_cond(t123, t106, 0.25e1)
t143 = math.exp(params_a_c2 / (0.1e1 - t139))
t145 = lax_cond(t106 <= 0.25e1, 0.1e1 - 0.667e0 * t124 - 0.4445555e0 * t126 - 0.663086601049e0 * t128 + 0.1451297044490e1 * t130 - 0.887998041597e0 * t130 * t124 + 0.234528941479e0 * t130 * t126 - 0.23185843322e-1 * t130 * t128, -params_a_d * t143)
t151 = math.sqrt(0.3e1)
t154 = math.sqrt(s0)
t160 = math.sqrt(t40 / t23 * t154 * t27 / t20 / r0)
t164 = math.exp(-0.98958000000000000000e1 * t151 / t160)
t169 = lax_cond(r0 / 0.2e1 <= p_a_dens_threshold, 0, -0.3e1 / 0.8e1 * t3 / t4 * t18 * t20 * ((0.1e1 + params_a_k1 * (0.1e1 - params_a_k1 / (params_a_k1 + 0.5e1 / 0.972e3 * t21 * t25 * t34 + t39 * t40 / t23 / t22 * t45 * t27 / t20 / t48 * t55 / 0.288e3 + t115))) * (0.1e1 - t145) + 0.1174e1 * t145) * (0.1e1 - t164))
res = 0.2e1 * t169
