t1 = s0 ** 2
t2 = r0 ** 2
t4 = t1 / t2
t5 = tau0 ** 2
t6 = 0.1e1 / t5
t10 = 3 ** (0.1e1 / 0.3e1)
t12 = (0.1e1 / math.pi) ** (0.1e1 / 0.3e1)
t13 = t10 * t12
t14 = 4 ** (0.1e1 / 0.3e1)
t15 = t14 ** 2
t16 = r0 ** (0.1e1 / 0.3e1)
t17 = 0.1e1 / t16
t19 = t13 * t15 * t17
t22 = math.sqrt(t19)
t25 = t19 ** 0.15e1
t27 = t10 ** 2
t28 = t12 ** 2
t29 = t27 * t28
t30 = t16 ** 2
t31 = 0.1e1 / t30
t33 = t29 * t14 * t31
t39 = math.log(0.1e1 + 0.16081979498692535067e2 / (0.37978500000000000000e1 * t22 + 0.89690000000000000000e0 * t19 + 0.20477500000000000000e0 * t25 + 0.12323500000000000000e0 * t33))
t41 = 0.621814e-1 * (0.1e1 + 0.53425000000000000000e-1 * t19) * t39
t42 = 0.1e1 <= p_a_zeta_threshold
t43 = p_a_zeta_threshold ** (0.1e1 / 0.3e1)
t44 = t43 * p_a_zeta_threshold
t45 = lax_cond(t42, t44, 1)
t48 = 2 ** (0.1e1 / 0.3e1)
t51 = 0.1e1 / (0.2e1 * t48 - 0.2e1)
t63 = math.log(0.1e1 + 0.29608749977793437516e2 / (0.51785000000000000000e1 * t22 + 0.90577500000000000000e0 * t19 + 0.11003250000000000000e0 * t25 + 0.12417750000000000000e0 * t33))
t66 = 0.19751673498613801407e-1 * (0.2e1 * t45 - 0.2e1) * t51 * (0.1e1 + 0.27812500000000000000e-1 * t19) * t63
t67 = math.log(0.2e1)
t68 = 0.1e1 - t67
t69 = math.pi ** 2
t71 = t68 / t69
t72 = t43 ** 2
t73 = lax_cond(t42, t72, 1)
t74 = t73 ** 2
t75 = t74 * t73
t78 = s0 / t16 / t2
t83 = 0.1e1 / t12 * t14
t87 = 0.1e1 / t68
t88 = t87 * t69
t94 = math.exp(-(-t41 + t66) * t87 * t69 / t75)
t96 = 0.1e1 / (t94 - 0.1e1)
t98 = t2 ** 2
t100 = 0.1e1 / t30 / t98
t103 = t48 ** 2
t104 = t74 ** 2
t107 = 0.1e1 / t28
t113 = t78 * t48 / t74 * t27 * t83 / 0.96e2 + 0.21720231316129303386e-4 * t88 * t96 * t1 * t100 * t103 / t104 * t10 * t107 * t15
t124 = math.log(0.1e1 + 0.6672455060314922e-1 * t113 * t87 * t69 / (0.1e1 + 0.6672455060314922e-1 * t88 * t96 * t113))
t131 = jnp.logical_or(r0 / 0.2e1 <= p_a_dens_threshold, t42)
t135 = lax_cond(t42, 0.1e1 / t43, 1)
t137 = t13 * t15 * t17 * t48 * t135
t140 = math.sqrt(t137)
t143 = t137 ** 0.15e1
t147 = t135 ** 2
t149 = t29 * t14 * t31 * t103 * t147
t155 = math.log(0.1e1 + 0.16081979498692535067e2 / (0.37978500000000000000e1 * t140 + 0.89690000000000000000e0 * t137 + 0.20477500000000000000e0 * t143 + 0.12323500000000000000e0 * t149))
t157 = 0.621814e-1 * (0.1e1 + 0.53425000000000000000e-1 * t137) * t155
t158 = 0.2e1 <= p_a_zeta_threshold
t160 = lax_cond(t158, t44, 0.2e1 * t48)
t161 = 0.0e0 <= p_a_zeta_threshold
t162 = lax_cond(t161, t44, 0)
t164 = (t160 + t162 - 0.2e1) * t51
t175 = math.log(0.1e1 + 0.32163958997385070134e2 / (0.70594500000000000000e1 * t140 + 0.15494250000000000000e1 * t137 + 0.42077500000000000000e0 * t143 + 0.15629250000000000000e0 * t149))
t188 = math.log(0.1e1 + 0.29608749977793437516e2 / (0.51785000000000000000e1 * t140 + 0.90577500000000000000e0 * t137 + 0.11003250000000000000e0 * t143 + 0.12417750000000000000e0 * t149))
t189 = (0.1e1 + 0.27812500000000000000e-1 * t137) * t188
t192 = t164 * (-0.3109070e-1 * (0.1e1 + 0.51370000000000000000e-1 * t137) * t175 + t157 - 0.19751673498613801407e-1 * t189)
t194 = 0.19751673498613801407e-1 * t164 * t189
t195 = lax_cond(t158, t72, t103)
t196 = lax_cond(t161, t72, 0)
t198 = t195 / 0.2e1 + t196 / 0.2e1
t199 = t198 ** 2
t200 = t199 * t198
t214 = math.exp(-(-t157 + t192 + t194) * t87 * t69 / t200)
t216 = 0.1e1 / (t214 - 0.1e1)
t220 = t199 ** 2
t230 = t78 / t199 * t27 * t83 * t103 / t135 / 0.96e2 + 0.43440462632258606772e-4 * t88 * t216 * t1 * t100 / t220 * t10 * t107 * t15 * t48 / t147
t241 = math.log(0.1e1 + 0.6672455060314922e-1 * t230 * t87 * t69 / (0.1e1 + 0.6672455060314922e-1 * t88 * t216 * t230))
t245 = lax_cond(t42, p_a_zeta_threshold, 1)
t248 = lax_cond(t131, 0, (t71 * t200 * t241 - t157 + t192 + t194) * t245 / 0.2e1)
res = (0.1e1 + 0.82812500000000000000e-2 * t4 * t6) * (t71 * t75 * t124 - t41 + t66) - 0.47812500000000000000e-1 * t4 * t6 * t248
