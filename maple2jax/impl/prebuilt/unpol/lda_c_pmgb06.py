t1 = 0.1e1 <= p_a_zeta_threshold
t2 = p_a_zeta_threshold ** (0.1e1 / 0.3e1)
t3 = t2 ** 2
t4 = lax_cond(t1, t3, 1)
t5 = t4 ** 2
t6 = t5 * t4
t7 = math.log(0.2e1)
t8 = t7 - 0.1e1
t11 = math.pi ** 2
t12 = 0.1e1 / t11
t13 = 3 ** (0.1e1 / 0.3e1)
t14 = 0.1e1 / math.pi
t15 = t14 ** (0.1e1 / 0.3e1)
t16 = t13 * t15
t17 = 4 ** (0.1e1 / 0.3e1)
t18 = t17 ** 2
t19 = r0 ** (0.1e1 / 0.3e1)
t20 = 0.1e1 / t19
t21 = t18 * t20
t22 = t16 * t21
t23 = math.sqrt(t22)
t27 = 0.29230250000000000000e1 * p_a_cam_omega * t23 / t4
t29 = 9 ** (0.1e1 / 0.3e1)
t30 = t29 ** 2
t38 = p_a_cam_omega ** 2
t41 = t15 * t18
t42 = 0.1e1 / t5
t47 = t38 * p_a_cam_omega
t62 = math.log((0.1e1 + t27 + (0.344851e1 - math.pi * t17 * t30 * t15 / t8 / 0.12e2) * t38 * t13 * t41 * t20 * t42 / 0.4e1 + 0.48968000000000000000e0 * t47 * t23 * t22 / t6) / (0.1e1 + t27 + 0.86212750000000000000e0 * t38 * t13 * t15 * t21 * t42))
t65 = math.sqrt(math.pi)
t68 = 0.1e1 / r0
t82 = t13 ** 2
t83 = t15 ** 2
t84 = t82 * t83
t85 = t19 ** 2
t87 = t17 / t85
t88 = t84 * t87
t90 = t14 * t68
t92 = t15 * t14
t93 = t13 * t92
t96 = t18 / t19 / r0
t101 = math.exp(-0.18810000000000000000e0 * t22)
t102 = (0.1e1 - (0.2e1 / 0.45e2 * t17 * t30 * t15 * (t11 + 0.6e1 * t7 - 0.3e1) * t14 - 0.7524e0) * t13 * t41 * t20 / 0.4e1 + 0.20482500000000000000e-1 * t88 - 0.95775000000000000000e-2 * t90 + 0.34856250000000000000e-3 * t93 * t96) * t101
t103 = math.sqrt(0.2e1)
t108 = t82 * t83 * t12
t109 = t108 * t17
t111 = 0.1e1 / t85 / r0
t112 = p_a_zeta_threshold ** 2
t113 = lax_cond(t1, t112, 1)
t115 = 0.1e1 / t92
t118 = 2 ** (0.1e1 / 0.3e1)
t120 = t16 * t21 * t118
t124 = t118 ** 2
t133 = t113 * t30 * t115 * t13 * t85 * (0.1e1 - 0.56675000000000000000e-2 * t120) / (0.1e1 + 0.10797500000000000000e0 * t120 + 0.10000000000000000000e-1 * t84 * t87 * t124) / 0.15e2
t138 = math.exp(-0.77500000000000000000e-1 * t22)
t145 = t103 * t65
t152 = t102 / 0.2e1 - 0.1e1 / 0.2e1
t159 = math.exp(-0.13675000000000000000e0 * t22)
t168 = lax_cond(t1, t3 * t112, 1)
t183 = t22 ** 0.15e1
t190 = math.log(0.1e1 + 0.16081979498692535067e2 / (0.37978500000000000000e1 * t23 + 0.89690000000000000000e0 * t22 + 0.20477500000000000000e0 * t183 + 0.12323500000000000000e0 * t88))
t194 = lax_cond(t1, t2 * p_a_zeta_threshold, 1)
t211 = math.log(0.1e1 + 0.29608749977793437516e2 / (0.51785000000000000000e1 * t23 + 0.90577500000000000000e0 * t22 + 0.11003250000000000000e0 * t183 + 0.12417750000000000000e0 * t88))
t215 = -0.621814e-1 * (0.1e1 + 0.53425000000000000000e-1 * t22) * t190 + 0.19751673498613801407e-1 * (0.2e1 * t194 - 0.2e1) / (0.2e1 * t118 - 0.2e1) * (0.1e1 + 0.27812500000000000000e-1 * t22) * t211
t220 = t38 ** 2
t233 = r0 ** 2
t244 = t220 ** 2
t253 = (0.1e1 + 0.15403623315025000000e0 * t84 * t87 * t38) ** 2
t254 = t253 ** 2
res = (0.2e1 * t6 * t8 * t12 * t62 + (-0.17543244109220059985e0 / t65 / math.pi * t68 * t102 * t103 - 0.30400821447970174150e-2 * t109 * t111 * (t133 + 0.4e1 / 0.3e1 * (-0.12375000000000000000e1 * t22 + t88 / 0.4e1) * t138 * math.pi * r0) * t145) * t47 + (-0.26314866163830089978e0 * t90 * t152 - 0.38001026809962717688e-2 * t109 * t111 * (t133 + (-0.97000000000000000000e-1 * t22 + 0.16900000000000000000e0 * t88) * t159 * t13 / t83 * t18 * t85 / 0.3e1 - t168 * t30 * t115 * t13 * t85 / 0.15e2) * math.pi + 0.42708890021612718669e0 * t93 * t96 * t215) * t220 - 0.67557380995489275890e-2 * t108 * t17 * t111 * t102 * t145 * t220 * p_a_cam_omega + (-0.10133607149323391384e-1 * t109 * t111 * t152 * math.pi + 0.52629732327660179956e0 * t12 / t233 * t215) * t220 * t38 + 0.20267214298646782767e-1 * t109 / t85 / t233 * t215 * t244) / t254
