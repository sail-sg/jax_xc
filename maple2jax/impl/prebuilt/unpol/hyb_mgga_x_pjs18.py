t3 = 3 ** (0.1e1 / 0.3e1)
t4 = math.pi ** (0.1e1 / 0.3e1)
t7 = 0.1e1 <= p_a_zeta_threshold
t8 = p_a_zeta_threshold - 0.1e1
t10 = lax_cond(t7, -t8, 0)
t11 = lax_cond(t7, t8, t10)
t12 = 0.1e1 + t11
t13 = t12 <= p_a_zeta_threshold
t14 = p_a_zeta_threshold ** (0.1e1 / 0.3e1)
t16 = t12 ** (0.1e1 / 0.3e1)
t18 = lax_cond(t13, t14 * p_a_zeta_threshold, t16 * t12)
t19 = r0 ** (0.1e1 / 0.3e1)
t21 = 9 ** (0.1e1 / 0.3e1)
t22 = t21 ** 2
t24 = (0.1e1 / math.pi) ** (0.1e1 / 0.3e1)
t25 = t24 ** 2
t30 = 6 ** (0.1e1 / 0.3e1)
t31 = math.pi ** 2
t32 = t31 ** (0.1e1 / 0.3e1)
t33 = t32 ** 2
t34 = 0.1e1 / t33
t35 = t30 * t34
t36 = 2 ** (0.1e1 / 0.3e1)
t37 = t36 ** 2
t38 = s0 * t37
t39 = r0 ** 2
t40 = t19 ** 2
t42 = 0.1e1 / t40 / t39
t43 = t38 * t42
t46 = t30 ** 2
t50 = s0 ** 2
t52 = t39 ** 2
t59 = 0.1e1 + 0.15045488888888888889e0 * t35 * t43 + 0.53798980924525896000e-2 * t46 / t32 / t31 * t50 * t36 / t19 / t52 / r0
t60 = t59 ** (0.1e1 / 0.10e2)
t62 = lax_cond(t13, t14, t16)
t67 = t22 * t25 * p_a_cam_omega * t3 / t19 / t60 / t62 / 0.18e2
t69 = lax_cond(t67 < 0.1e-9, 0.1e-9, t67)
t71 = 0.135e1 < t69
t72 = lax_cond(t71, t69, 0.135e1)
t73 = t72 ** 2
t76 = t73 ** 2
t79 = t76 * t73
t82 = t76 ** 2
t94 = t82 ** 2
t98 = lax_cond(t71, 0.135e1, t69)
t99 = math.sqrt(math.pi)
t102 = math.erf(0.1e1 / t98 / 0.2e1)
t104 = t98 ** 2
t107 = math.exp(-0.1e1 / t104 / 0.4e1)
t118 = lax_cond(0.135e1 <= t69, 0.1e1 / t73 / 0.36e2 - 0.1e1 / t76 / 0.960e3 + 0.1e1 / t79 / 0.26880e5 - 0.1e1 / t82 / 0.829440e6 + 0.1e1 / t82 / t73 / 0.28385280e8 - 0.1e1 / t82 / t76 / 0.1073479680e10 + 0.1e1 / t82 / t79 / 0.44590694400e11 - 0.1e1 / t94 / 0.2021444812800e13, 0.1e1 - 0.8e1 / 0.3e1 * t98 * (t99 * t102 + 0.2e1 * t98 * (t107 - 0.3e1 / 0.2e1 - 0.2e1 * t104 * (t107 - 0.1e1))))
t119 = t59 ** (0.1e1 / 0.5e1)
t123 = 0.27e0 < t69
t124 = lax_cond(t123, t69, 0.27e0)
t125 = t124 ** 2
t126 = t125 ** 2
t127 = t126 ** 2
t128 = t127 * t126
t129 = t127 ** 2
t130 = t129 ** 2
t134 = t126 * t125
t135 = t127 * t134
t145 = t127 * t125
t160 = 0.1e1 / t130 / t128 / 0.33929038000650146833571361325056000000e38 - 0.1e1 / t130 / t135 / 0.3511556992918352140755776405766144000000e40 + 0.3e1 / 0.2240e4 / t126 - 0.1e1 / t134 / 0.11520e5 + 0.3e1 / 0.788480e6 / t127 - 0.1e1 / t145 / 0.7454720e7 + 0.1e1 / t128 / 0.247726080e9 - 0.1e1 / t135 / 0.9358540800e10 + 0.1e1 / t129 / 0.394474291200e12 - 0.1e1 / t129 / t125 / 0.18311911833600e14 + 0.1e1 / t129 / t126 / 0.927028425523200e15
t193 = -0.1e1 / t129 / t134 / 0.50785035485184000e17 + 0.1e1 / t129 / t127 / 0.2991700272218112000e19 - 0.1e1 / t129 / t145 / 0.188514051721003008000e21 + 0.1e1 / t129 / t128 / 0.12648942844388573184000e23 - 0.1e1 / t129 / t135 / 0.900231674141645733888000e24 + 0.1e1 / t130 / 0.67726520292999771979776000e26 - 0.1e1 / t130 / t125 / 0.5369745537516410492682240000e28 + 0.1e1 / t130 / t126 / 0.447473103488807905221672960000e30 - 0.1e1 / t130 / t134 / 0.39097165634742908368485089280000e32 + 0.1e1 / t130 / t127 / 0.3573852336994573837102806466560000e34 - 0.1e1 / t130 / t145 / 0.341095116070365837848137621831680000e36
t195 = lax_cond(t123, 0.27e0, t69)
t196 = t195 ** 2
t198 = t196 ** 2
t199 = 0.64e2 * t198
t203 = math.exp(-0.1e1 / t196 / 0.4e1)
t209 = math.erf(0.1e1 / t195 / 0.2e1)
t216 = lax_cond(0.27e0 <= t69, t160 + t193, 0.1e1 + 0.24e2 * t196 * ((0.20e2 * t196 - t199) * t203 - 0.3e1 - 0.36e2 * t196 + t199 + 0.10e2 * t195 * t99 * t209))
t227 = t119 ** 2
t228 = 0.1e1 / t227
t233 = 0.32e0 < t69
t234 = lax_cond(t233, t69, 0.32e0)
t235 = t234 ** 2
t236 = t235 ** 2
t239 = t236 * t235
t242 = t236 ** 2
t245 = t242 * t235
t248 = t242 * t236
t251 = t242 * t239
t254 = t242 ** 2
t278 = t254 ** 2
t290 = 0.3e1 / 0.7840e4 / t236 - 0.1e1 / t239 / 0.56448e5 + 0.5e1 / 0.8515584e7 / t242 - 0.1e1 / t245 / 0.61501440e8 + 0.1e1 / t248 / 0.2530344960e10 - 0.1e1 / t251 / 0.115811942400e12 + 0.1e1 / t254 / 0.5811921223680e13 - 0.1e1 / t254 / t235 / 0.316612955602944e15 + 0.1e1 / t254 / t236 / 0.18582706166169600e17 - 0.1e1 / t254 / t239 / 0.1168055816159232000e19 + 0.1e1 / t254 / t242 / 0.78244468658012160000e20 - 0.1e1 / t254 / t245 / 0.5562511054710453043200e22 + 0.1e1 / t254 / t248 / 0.418174050435486229463040e24 - 0.1e1 / t254 / t251 / 0.33139778504339333578752000e26 + 0.1e1 / t278 / 0.2760851680179343645999104000e28 - 0.1e1 / t278 / t235 / 0.241191070393445437962977280000e30 + 0.1e1 / t278 / t236 / 0.22046293272414372635684634624000e32 - 0.1e1 / t278 / t239 / 0.2104209454461863328391867505049600e34
t291 = lax_cond(t233, 0.32e0, t69)
t293 = t291 ** 2
t294 = t293 * t291
t296 = t293 ** 2
t301 = t296 ** 2
t307 = math.exp(-0.1e1 / t293 / 0.4e1)
t321 = math.erf(0.1e1 / t291 / 0.2e1)
t328 = lax_cond(0.32e0 <= t69, t290, 0.1e1 + 0.8e1 / 0.7e1 * t291 * ((-0.576e3 * t296 * t291 - 0.122880e6 * t301 * t291 + 0.3840e4 * t296 * t294 - 0.8e1 * t291 + 0.256e3 * t294) * t307 + 0.24e2 * t294 * (0.5120e4 * t296 * t293 + 0.224e3 * t293 - 0.1440e4 * t296 - 0.35e2) + 0.2e1 * t99 * (-0.2e1 + 0.60e2 * t293) * t321))
t339 = lax_cond(r0 / 0.2e1 <= p_a_dens_threshold, 0, -0.3e1 / 0.8e1 * t3 / t4 * t18 * t19 * (t118 / t119 + 0.35e2 / 0.81e2 * t216 * (-0.14554132000000000000e0 * tau0 * t37 / t40 / r0 + 0.4366239600000000000e-1 * t46 * t33 + 0.42296278333333333333e-1 * t43) * t35 * t228 + 0.26329605555555555556e-1 * t328 * t30 * t34 * t38 * t42 * t228))
res = 0.2e1 * t339
